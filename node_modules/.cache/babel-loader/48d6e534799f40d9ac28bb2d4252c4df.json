{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/macbookprom1/Desktop/nft_dao/nft_dao/blunc-dao/blunc-dao-nft/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"/Users/macbookprom1/Desktop/nft_dao/nft_dao/blunc-dao/blunc-dao-nft/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/macbookprom1/Desktop/nft_dao/nft_dao/blunc-dao/blunc-dao-nft/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/macbookprom1/Desktop/nft_dao/nft_dao/blunc-dao/blunc-dao-nft/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _get from \"/Users/macbookprom1/Desktop/nft_dao/nft_dao/blunc-dao/blunc-dao-nft/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/macbookprom1/Desktop/nft_dao/nft_dao/blunc-dao/blunc-dao-nft/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/macbookprom1/Desktop/nft_dao/nft_dao/blunc-dao/blunc-dao-nft/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/macbookprom1/Desktop/nft_dao/nft_dao/blunc-dao/blunc-dao-nft/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _asyncToGenerator from \"/Users/macbookprom1/Desktop/nft_dao/nft_dao/blunc-dao/blunc-dao-nft/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _defineProperty2 from \"/Users/macbookprom1/Desktop/nft_dao/nft_dao/blunc-dao/blunc-dao-nft/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n\nvar _WALLET_OPENLOGIN_VER, _paymentProviders$, _defaultVerifiers;\n\nimport _regeneratorRuntime from \"/Users/macbookprom1/Desktop/nft_dao/nft_dao/blunc-dao/blunc-dao-nft/node_modules/@babel/runtime/regenerator/index.js\";\nimport _objectWithoutProperties from '@babel/runtime/helpers/objectWithoutProperties';\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport NodeDetailManager from '@toruslabs/fetch-node-details';\nimport { get, setAPIKey } from '@toruslabs/http-helpers';\nimport { SafeEventEmitter, ObjectMultiplex, createStreamMiddleware, JRPCEngine, createIdRemapMiddleware, BasePostMessageStream, setupMultiplex } from '@toruslabs/openlogin-jrpc';\nimport TorusJs from '@toruslabs/torus.js';\nimport deepmerge from 'lodash.merge';\nimport { ObservableStore, storeAsStream } from '@metamask/obs-store';\nimport { ethErrors, EthereumRpcError } from 'eth-rpc-errors';\nimport dequal from 'fast-deep-equal';\nimport { duplex } from 'is-stream';\nimport pump from 'pump';\nimport loglevel from 'loglevel';\nimport createHash from 'create-hash';\nimport { EventEmitter } from 'events';\nvar LOGIN_PROVIDER = {\n  GOOGLE: \"google\",\n  FACEBOOK: \"facebook\",\n  TWITCH: \"twitch\",\n  REDDIT: \"reddit\",\n  DISCORD: \"discord\"\n};\nvar WALLET_OPENLOGIN_VERIFIER_MAP = (_WALLET_OPENLOGIN_VER = {}, _defineProperty2(_WALLET_OPENLOGIN_VER, LOGIN_PROVIDER.GOOGLE, \"tkey-google\"), _defineProperty2(_WALLET_OPENLOGIN_VER, LOGIN_PROVIDER.FACEBOOK, \"tkey-facebook\"), _defineProperty2(_WALLET_OPENLOGIN_VER, LOGIN_PROVIDER.TWITCH, \"tkey-twitch\"), _defineProperty2(_WALLET_OPENLOGIN_VER, LOGIN_PROVIDER.REDDIT, \"tkey-reddit\"), _defineProperty2(_WALLET_OPENLOGIN_VER, LOGIN_PROVIDER.DISCORD, \"tkey-discord\"), _WALLET_OPENLOGIN_VER);\nvar PAYMENT_PROVIDER = {\n  MOONPAY: \"moonpay\",\n  WYRE: \"wyre\",\n  RAMPNETWORK: \"rampnetwork\",\n  XANPOOL: \"xanpool\",\n  MERCURYO: \"mercuryo\",\n  TRANSAK: \"transak\"\n};\nvar TORUS_BUILD_ENV = {\n  PRODUCTION: \"production\",\n  DEVELOPMENT: \"development\",\n  BINANCE: \"binance\",\n  TESTING: \"testing\",\n  LRC: \"lrc\",\n  BETA: \"beta\"\n};\nvar BUTTON_POSITION = {\n  BOTTOM_LEFT: \"bottom-left\",\n  TOP_LEFT: \"top-left\",\n  BOTTOM_RIGHT: \"bottom-right\",\n  TOP_RIGHT: \"top-right\"\n};\nvar paymentProviders$1 = (_paymentProviders$ = {}, _defineProperty2(_paymentProviders$, PAYMENT_PROVIDER.RAMPNETWORK, {\n  line1: \"Debit Card/ Apple Pay/ Bank transfer\",\n  line2: \"0.49% - 2.9%\",\n  line3: \"5,000€/purchase, 20,000€/mo\",\n  supportPage: \"https://instant.ramp.network/\",\n  minOrderValue: 50,\n  maxOrderValue: 20000,\n  validCurrencies: [\"GBP\", \"EUR\", \"USD\"],\n  validCryptoCurrencies: [\"ETH\", \"DAI\", \"USDC\", \"BSC_BNB\"],\n  includeFees: true,\n  enforceMax: false\n}), _defineProperty2(_paymentProviders$, PAYMENT_PROVIDER.MOONPAY, {\n  line1: \"Credit / Debit Card / Apple Pay\",\n  line2: \"4.5% or 5 USD\",\n  line3: \"2,000€/day, 10,000€/mo\",\n  supportPage: \"https://help.moonpay.io/en/\",\n  minOrderValue: 24.99,\n  maxOrderValue: 50000,\n  validCurrencies: [\"USD\", \"EUR\", \"GBP\", \"AUD\", \"CAD\", \"SGD\", \"RUB\"],\n  validCryptoCurrencies: [\"ETH\", \"DAI\", \"TUSD\", \"USDC\", \"USDT\", \"BNB_BSC\", \"BUSD_BSC\"],\n  includeFees: true,\n  enforceMax: false\n}), _defineProperty2(_paymentProviders$, PAYMENT_PROVIDER.WYRE, {\n  line1: \"Apple Pay/ Debit/ Credit Card\",\n  line2: \"4.9% + 30¢ or 5 USD\",\n  line3: \"$250/day\",\n  supportPage: \"https://support.sendwyre.com/en/\",\n  minOrderValue: 5,\n  maxOrderValue: 500,\n  validCurrencies: [\"USD\", \"AUD\", \"CAD\", \"GBP\", \"EUR\"],\n  validCryptoCurrencies: [\"ETH\", \"DAI\", \"USDC\", \"USDT\"],\n  includeFees: false,\n  enforceMax: false\n}), _defineProperty2(_paymentProviders$, PAYMENT_PROVIDER.XANPOOL, {\n  line1: \"PayNow/ InstaPay/ FPS/ GoJekPay/ UPI/ PromptPay/ VietelPay/ DuitNow\",\n  line2: \"2.5% buying, 3% selling\",\n  line3: \"$2,500 / day\",\n  supportPage: \"mailto:support@xanpool.com\",\n  minOrderValue: 100,\n  maxOrderValue: 2500,\n  validCurrencies: [\"SGD\", \"HKD\", \"MYR\", \"PHP\", \"INR\", \"VND\", \"THB\", \"IDR\"],\n  validCryptoCurrencies: [\"ETH\", \"USDT\"],\n  includeFees: true,\n  sell: true,\n  enforceMax: false\n}), _defineProperty2(_paymentProviders$, PAYMENT_PROVIDER.MERCURYO, {\n  line1: \"Credit/ Debit Card/ Apple Pay\",\n  line2: \"3.95% or 4 USD\",\n  line3: \"10,000€/day, 25,000€/mo\",\n  supportPage: \"mailto:support@mercuryo.io\",\n  minOrderValue: 30,\n  maxOrderValue: 5000,\n  validCurrencies: [\"USD\", \"EUR\", \"RUB\", \"TRY\", \"GBP\", \"UAH\"],\n  validCryptoCurrencies: [\"ETH\", \"DAI\", \"BAT\", \"USDT\", \"OKB\"],\n  includeFees: true,\n  enforceMax: false\n}), _defineProperty2(_paymentProviders$, PAYMENT_PROVIDER.TRANSAK, {\n  line1: \"Credit/ Debit Card/ <br/>Bank Transfer (sepa/gbp)\",\n  line2: \"0.99% - 5.5% or 5 USD\",\n  line3: \"500€/day\",\n  supportPage: \"https://support.transak.com/hc/en-US\",\n  minOrderValue: 20,\n  maxOrderValue: 500,\n  validCurrencies: [\"USD\", \"EUR\", \"GBP\", \"AUD\", \"CAD\", \"SGD\"],\n  validCryptoCurrencies: [\"ETH\", \"DAI\", \"USDC\", \"USDT\"],\n  includeFees: true,\n  enforceMax: false\n}), _paymentProviders$);\nvar translations = {\n  en: {\n    embed: {\n      continue: \"Continue\",\n      actionRequired: \"Authorization required\",\n      pendingAction: \"Click continue to proceed with your request in a popup\",\n      cookiesRequired: \"Cookies Required\",\n      enableCookies: \"Please enable cookies in your browser preferences to access Torus\",\n      clickHere: \"More Info\"\n    }\n  },\n  de: {\n    embed: {\n      continue: \"Fortsetzen\",\n      actionRequired: \"Autorisierung erforderlich\",\n      pendingAction: \"Klicken Sie in einem Popup auf Weiter, um mit Ihrer Anfrage fortzufahren\",\n      cookiesRequired: \"Cookies benötigt\",\n      enableCookies: \"Bitte aktivieren Sie Cookies in Ihren Browsereinstellungen, um auf Torus zuzugreifen\",\n      clickHere: \"Mehr Info\"\n    }\n  },\n  ja: {\n    embed: {\n      continue: \"継続する\",\n      actionRequired: \"認証が必要です\",\n      pendingAction: \"続行をクリックして、ポップアップでリクエストを続行します\",\n      cookiesRequired: \"必要なクッキー\",\n      enableCookies: \"Torusにアクセスするには、ブラウザの設定でCookieを有効にしてください。\",\n      clickHere: \"詳しくは\"\n    }\n  },\n  ko: {\n    embed: {\n      continue: \"계속하다\",\n      actionRequired: \"승인 필요\",\n      pendingAction: \"팝업에서 요청을 진행하려면 계속을 클릭하십시오.\",\n      cookiesRequired: \"쿠키 필요\",\n      enableCookies: \"브라우저 환경 설정에서 쿠키를 활성화하여 Torus에 액세스하십시오.\",\n      clickHere: \"더 많은 정보\"\n    }\n  },\n  zh: {\n    embed: {\n      continue: \"继续\",\n      actionRequired: \"需要授权\",\n      pendingAction: \"单击继续以在弹出窗口中继续您的请求\",\n      cookiesRequired: \"必填Cookie\",\n      enableCookies: \"请在您的浏览器首选项中启用cookie以访问Torus。\",\n      clickHere: \"更多信息\"\n    }\n  }\n};\nvar configuration = {\n  supportedVerifierList: [LOGIN_PROVIDER.GOOGLE, LOGIN_PROVIDER.REDDIT, LOGIN_PROVIDER.DISCORD],\n  paymentProviders: paymentProviders$1,\n  api: \"https://api.tor.us\",\n  translations: translations,\n  prodTorusUrl: \"\",\n  localStorageKeyPrefix: \"torus-\"\n};\n\nvar runOnLoad = function runOnLoad(fn) {\n  return new Promise(function (resolve, reject) {\n    if (window.document.body != null) {\n      Promise.resolve(fn()).then(resolve).catch(reject);\n    } else {\n      window.document.addEventListener(\"DOMContentLoaded\", function () {\n        Promise.resolve(fn()).then(resolve).catch(reject);\n      });\n    }\n  });\n};\n\nvar htmlToElement = function htmlToElement(html) {\n  var template = window.document.createElement(\"template\");\n  var trimmedHtml = html.trim(); // Never return a text node of whitespace as the result\n\n  template.innerHTML = trimmedHtml;\n  return template.content.firstChild;\n};\n\nvar handleEvent = function handleEvent(handle, eventName, handler) {\n  for (var _len = arguments.length, handlerArgs = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n    handlerArgs[_key - 3] = arguments[_key];\n  }\n\n  var handlerWrapper = function handlerWrapper() {\n    handler.apply(void 0, handlerArgs);\n    handle.removeEventListener(eventName, handlerWrapper);\n  };\n\n  handle.addEventListener(eventName, handlerWrapper);\n};\n\nvar handleStream = function handleStream(handle, eventName, handler) {\n  var handlerWrapper = function handlerWrapper(chunk) {\n    handler(chunk);\n    handle.removeListener(eventName, handlerWrapper);\n  };\n\n  handle.on(eventName, handlerWrapper);\n};\n\nfunction documentReady() {\n  return _documentReady.apply(this, arguments);\n}\n\nfunction _documentReady() {\n  _documentReady = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee13() {\n    return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n      while (1) {\n        switch (_context13.prev = _context13.next) {\n          case 0:\n            return _context13.abrupt(\"return\", new Promise(function (resolve) {\n              if (document.readyState !== \"loading\") {\n                resolve();\n              } else {\n                handleEvent(document, \"DOMContentLoaded\", resolve);\n              }\n            }));\n\n          case 1:\n          case \"end\":\n            return _context13.stop();\n        }\n      }\n    }, _callee13);\n  }));\n  return _documentReady.apply(this, arguments);\n}\n\nvar log = loglevel.getLogger(\"torus-embed\");\nvar messages = {\n  errors: {\n    disconnected: function disconnected() {\n      return \"Torus: Lost connection to Torus.\";\n    },\n    permanentlyDisconnected: function permanentlyDisconnected() {\n      return \"Torus: Disconnected from iframe. Page reload required.\";\n    },\n    sendSiteMetadata: function sendSiteMetadata() {\n      return \"Torus: Failed to send site metadata. This is an internal error, please report this bug.\";\n    },\n    unsupportedSync: function unsupportedSync(method) {\n      return \"Torus: The Torus Ethereum provider does not support synchronous methods like \".concat(method, \" without a callback parameter.\");\n    },\n    invalidDuplexStream: function invalidDuplexStream() {\n      return \"Must provide a Node.js-style duplex stream.\";\n    },\n    invalidOptions: function invalidOptions(maxEventListeners, shouldSendMetadata) {\n      return \"Invalid options. Received: { maxEventListeners: \".concat(maxEventListeners, \", shouldSendMetadata: \").concat(shouldSendMetadata, \" }\");\n    },\n    invalidRequestArgs: function invalidRequestArgs() {\n      return \"Expected a single, non-array, object argument.\";\n    },\n    invalidRequestMethod: function invalidRequestMethod() {\n      return \"'args.method' must be a non-empty string.\";\n    },\n    invalidRequestParams: function invalidRequestParams() {\n      return \"'args.params' must be an object or array if provided.\";\n    },\n    invalidLoggerObject: function invalidLoggerObject() {\n      return \"'args.logger' must be an object if provided.\";\n    },\n    invalidLoggerMethod: function invalidLoggerMethod(method) {\n      return \"'args.logger' must include required method '\".concat(method, \"'.\");\n    }\n  },\n  info: {\n    connected: function connected(chainId) {\n      return \"Torus: Connected to chain with ID \\\"\".concat(chainId, \"\\\".\");\n    }\n  },\n  warnings: {\n    // deprecated methods\n    enableDeprecation: 'Torus: \"\"ethereum.enable()\" is deprecated and may be removed in the future. ' + 'Please use \"ethereum.send(\"eth_requestAccounts\")\" instead. For more information, see: https://eips.ethereum.org/EIPS/eip-1102',\n    sendDeprecation: 'Torus: \"ethereum.send(...)\" is deprecated and may be removed in the future.' + ' Please use \"ethereum.sendAsync(...)\" or \"ethereum.request(...)\" instead.\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193',\n    events: {\n      close: 'Torus: The event \"close\" is deprecated and may be removed in the future. Please use \"disconnect\" instead.' + \"\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193\",\n      data: 'Torus: The event \"data\" is deprecated and will be removed in the future.' + 'Use \"message\" instead.\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193#message',\n      networkChanged: 'Torus: The event \"networkChanged\" is deprecated and may be removed in the future.' + ' Please use \"chainChanged\" instead.\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193',\n      notification: 'Torus: The event \"notification\" is deprecated and may be removed in the future. ' + 'Please use \"message\" instead.\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193'\n    },\n    publicConfigStore: 'Torus: The property \"publicConfigStore\" is deprecated and WILL be removed in the future.'\n  }\n};\nvar paymentProviders = configuration.paymentProviders;\n\nvar validatePaymentProvider = function validatePaymentProvider(provider, params) {\n  var errors = {};\n\n  if (!provider) {\n    return {\n      errors: errors,\n      isValid: true\n    };\n  }\n\n  if (provider && !paymentProviders[provider]) {\n    errors.provider = \"Invalid Provider\";\n    return {\n      errors: errors,\n      isValid: Object.keys(errors).length === 0\n    };\n  }\n\n  var selectedProvider = paymentProviders[provider];\n  var selectedParams = params || {}; // set default values\n  // if (!selectedParams.selectedCurrency) [selectedParams.selectedCurrency] = selectedProvider.validCurrencies\n  // if (!selectedParams.fiatValue) selectedParams.fiatValue = selectedProvider.minOrderValue\n  // if (!selectedParams.selectedCryptoCurrency) [selectedParams.selectedCryptoCurrency] = selectedProvider.validCryptoCurrencies\n  // validations\n\n  if (selectedParams.fiatValue) {\n    var requestedOrderAmount = +parseFloat(selectedParams.fiatValue.toString()) || 0;\n    if (requestedOrderAmount < selectedProvider.minOrderValue) errors.fiatValue = \"Requested amount is lower than supported\";\n    if (requestedOrderAmount > selectedProvider.maxOrderValue && selectedProvider.enforceMax) errors.fiatValue = \"Requested amount is higher than supported\";\n  }\n\n  if (selectedParams.selectedCurrency && !selectedProvider.validCurrencies.includes(selectedParams.selectedCurrency)) {\n    errors.selectedCurrency = \"Unsupported currency\";\n  }\n\n  if (selectedParams.selectedCryptoCurrency && !selectedProvider.validCryptoCurrencies.includes(selectedParams.selectedCryptoCurrency)) {\n    errors.selectedCryptoCurrency = \"Unsupported cryptoCurrency\";\n  }\n\n  return {\n    errors: errors,\n    isValid: Object.keys(errors).length === 0\n  };\n}; // utility functions\n\n/**\n * json-rpc-engine middleware that logs RPC errors and and validates req.method.\n *\n * @param log - The logging API to use.\n * @returns  json-rpc-engine middleware function\n */\n\n\nfunction createErrorMiddleware() {\n  return function (req, res, next) {\n    // json-rpc-engine will terminate the request when it notices this error\n    if (typeof req.method !== \"string\" || !req.method) {\n      res.error = ethErrors.rpc.invalidRequest({\n        message: \"The request 'method' must be a non-empty string.\",\n        data: req\n      });\n    }\n\n    next(function (done) {\n      var error = res.error;\n\n      if (!error) {\n        return done();\n      }\n\n      log.error(\"MetaMask - RPC Error: \".concat(error.message), error);\n      return done();\n    });\n  };\n} // resolve response.result or response, reject errors\n\n/**\n * Logs a stream disconnection error. Emits an 'error' if given an\n * EventEmitter that has listeners for the 'error' event.\n *\n * @param log - The logging API to use.\n * @param remoteLabel - The label of the disconnected stream.\n * @param error - The associated error to log.\n * @param emitter - The logging API to use.\n */\n\n\nfunction logStreamDisconnectWarning(remoteLabel, error, emitter) {\n  var warningMsg = \"MetaMask: Lost connection to \\\"\".concat(remoteLabel, \"\\\".\");\n\n  if (error !== null && error !== void 0 && error.stack) {\n    warningMsg += \"\\n\".concat(error.stack);\n  }\n\n  log.warn(warningMsg);\n\n  if (emitter && emitter.listenerCount(\"error\") > 0) {\n    emitter.emit(\"error\", warningMsg);\n  }\n}\n\nvar getPreopenInstanceId = function getPreopenInstanceId() {\n  return Math.random().toString(36).slice(2);\n};\n\nvar getTorusUrl = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(buildEnv, integrity) {\n    var torusUrl, logLevel, version, versionUsed, response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            // Do not change this line\n            version = \"1.22.6\";\n            versionUsed = integrity.version || version;\n            _context.prev = 2;\n\n            if (!((buildEnv === \"binance\" || buildEnv === \"production\") && !integrity.version)) {\n              _context.next = 13;\n              break;\n            }\n\n            if (configuration.prodTorusUrl) {\n              _context.next = 10;\n              break;\n            }\n\n            _context.next = 7;\n            return get(\"\".concat(configuration.api, \"/latestversion?name=@toruslabs/torus-embed&version=\").concat(version), {}, {\n              useAPIKey: true\n            });\n\n          case 7:\n            response = _context.sent;\n            _context.next = 11;\n            break;\n\n          case 10:\n            response = {\n              data: configuration.prodTorusUrl\n            };\n\n          case 11:\n            versionUsed = response.data; // eslint-disable-next-line require-atomic-updates\n\n            configuration.prodTorusUrl = response.data;\n\n          case 13:\n            _context.next = 18;\n            break;\n\n          case 15:\n            _context.prev = 15;\n            _context.t0 = _context[\"catch\"](2);\n            log.error(_context.t0, \"unable to fetch latest version\");\n\n          case 18:\n            log.info(\"version used: \", versionUsed);\n            _context.t1 = buildEnv;\n            _context.next = _context.t1 === \"binance\" ? 22 : _context.t1 === \"testing\" ? 25 : _context.t1 === \"lrc\" ? 28 : _context.t1 === \"beta\" ? 31 : _context.t1 === \"development\" ? 34 : 37;\n            break;\n\n          case 22:\n            torusUrl = \"https://binance.tor.us/v\".concat(versionUsed);\n            logLevel = \"info\";\n            return _context.abrupt(\"break\", 40);\n\n          case 25:\n            torusUrl = \"https://testing.tor.us\";\n            logLevel = \"debug\";\n            return _context.abrupt(\"break\", 40);\n\n          case 28:\n            torusUrl = \"https://lrc.tor.us\";\n            logLevel = \"debug\";\n            return _context.abrupt(\"break\", 40);\n\n          case 31:\n            torusUrl = \"https://beta.tor.us\";\n            logLevel = \"debug\";\n            return _context.abrupt(\"break\", 40);\n\n          case 34:\n            torusUrl = \"http://localhost:4050\";\n            logLevel = \"debug\";\n            return _context.abrupt(\"break\", 40);\n\n          case 37:\n            torusUrl = \"https://app.tor.us/v\".concat(versionUsed);\n            logLevel = \"error\";\n            return _context.abrupt(\"break\", 40);\n\n          case 40:\n            return _context.abrupt(\"return\", {\n              torusUrl: torusUrl,\n              logLevel: logLevel\n            });\n\n          case 41:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[2, 15]]);\n  }));\n\n  return function getTorusUrl(_x, _x2) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nvar getUserLanguage = function getUserLanguage() {\n  var userLanguage = window.navigator.language || \"en-US\";\n  var userLanguages = userLanguage.split(\"-\");\n  userLanguage = Object.prototype.hasOwnProperty.call(configuration.translations, userLanguages[0]) ? userLanguages[0] : \"en\";\n  return userLanguage;\n};\n\nvar EMITTED_NOTIFICATIONS = [\"eth_subscription\" // per eth-json-rpc-filters/subscriptionManager\n];\n\nvar NOOP = function NOOP() {// empty function\n};\n\nvar FEATURES_PROVIDER_CHANGE_WINDOW = \"directories=0,titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=660,width=375\";\nvar FEATURES_DEFAULT_WALLET_WINDOW = \"directories=0,titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=740,width=1315\";\nvar FEATURES_CONFIRM_WINDOW = \"directories=0,titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=700,width=450\";\n\nfunction storageAvailable(type) {\n  var storage;\n\n  try {\n    storage = window[type];\n    var x = \"__storage_test__\";\n    storage.setItem(x, x);\n    storage.removeItem(x);\n    return true;\n  } catch (e) {\n    return e && ( // everything except Firefox\n    e.code === 22 || // Firefox\n    e.code === 1014 || // test name field too, because code might not be present\n    // everything except Firefox\n    e.name === \"QuotaExceededError\" || // Firefox\n    e.name === \"NS_ERROR_DOM_QUOTA_REACHED\") && // acknowledge QuotaExceededError only if there's something already stored\n    storage && storage.length !== 0;\n  }\n}\n\nfunction getPopupFeatures() {\n  // Fixes dual-screen position                             Most browsers      Firefox\n  var dualScreenLeft = window.screenLeft !== undefined ? window.screenLeft : window.screenX;\n  var dualScreenTop = window.screenTop !== undefined ? window.screenTop : window.screenY;\n  var w = 1200;\n  var h = 700;\n  var width = window.innerWidth ? window.innerWidth : document.documentElement.clientWidth ? document.documentElement.clientWidth : window.screen.width;\n  var height = window.innerHeight ? window.innerHeight : document.documentElement.clientHeight ? document.documentElement.clientHeight : window.screen.height;\n  var systemZoom = 1; // No reliable estimate\n\n  var left = Math.abs((width - w) / 2 / systemZoom + dualScreenLeft);\n  var top = Math.abs((height - h) / 2 / systemZoom + dualScreenTop);\n  var features = \"titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=\".concat(h / systemZoom, \",width=\").concat(w / systemZoom, \",top=\").concat(top, \",left=\").concat(left);\n  return features;\n}\n\nfunction ownKeys$1(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread$1(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys$1(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$1(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nSafeEventEmitter.defaultMaxListeners = 100; // resolve response.result, reject errors\n\nvar getRpcPromiseCallback = function getRpcPromiseCallback(resolve, reject) {\n  var unwrapResult = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  return function (error, response) {\n    if (error || response.error) {\n      return reject(error || response.error);\n    }\n\n    return !unwrapResult || Array.isArray(response) ? resolve(response) : resolve(response.result);\n  };\n};\n\nvar TorusInpageProvider = /*#__PURE__*/function (_SafeEventEmitter) {\n  _inherits(TorusInpageProvider, _SafeEventEmitter);\n\n  var _super = _createSuper(TorusInpageProvider);\n\n  /**\n   * The chain ID of the currently connected Ethereum chain.\n   * See [chainId.network]{@link https://chainid.network} for more information.\n   */\n\n  /**\n   * The user's currently selected Ethereum address.\n   * If null, MetaMask is either locked or the user has not permitted any\n   * addresses to be viewed.\n   */\n\n  /**\n   * Indicating that this provider is a MetaMask provider.\n   */\n  function TorusInpageProvider(connectionStream) {\n    var _this;\n\n    _classCallCheck(this, TorusInpageProvider);\n\n    var _ref5 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        _ref5$maxEventListene = _ref5.maxEventListeners,\n        maxEventListeners = _ref5$maxEventListene === void 0 ? 100 : _ref5$maxEventListene,\n        _ref5$shouldSendMetad = _ref5.shouldSendMetadata,\n        shouldSendMetadata = _ref5$shouldSendMetad === void 0 ? true : _ref5$shouldSendMetad,\n        _ref5$jsonRpcStreamNa = _ref5.jsonRpcStreamName,\n        jsonRpcStreamName = _ref5$jsonRpcStreamNa === void 0 ? \"provider\" : _ref5$jsonRpcStreamNa;\n\n    _this = _super.call(this);\n\n    _defineProperty(_assertThisInitialized(_this), \"chainId\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"selectedAddress\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rpcEngine\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"networkVersion\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"shouldSendMetadata\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"isTorus\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_publicConfigStore\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"tryPreopenHandle\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"enable\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_state\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_jsonRpcConnection\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_sentWarnings\", {\n      // methods\n      enable: false,\n      experimentalMethods: false,\n      send: false,\n      publicConfigStore: false,\n      // events\n      events: {\n        close: false,\n        data: false,\n        networkChanged: false,\n        notification: false\n      }\n    });\n\n    if (!duplex(connectionStream)) {\n      throw new Error(messages.errors.invalidDuplexStream());\n    }\n\n    _this.isTorus = true;\n\n    _this.setMaxListeners(maxEventListeners); // private state\n\n\n    _this._state = _objectSpread$1({}, TorusInpageProvider._defaultState); // public state\n\n    _this.selectedAddress = null;\n    _this.networkVersion = null;\n    _this.chainId = null;\n    _this.shouldSendMetadata = shouldSendMetadata; // bind functions (to prevent e.g. web3@1.x from making unbound calls)\n\n    _this._handleAccountsChanged = _this._handleAccountsChanged.bind(_assertThisInitialized(_this));\n    _this._handleChainChanged = _this._handleChainChanged.bind(_assertThisInitialized(_this));\n    _this._handleUnlockStateChanged = _this._handleUnlockStateChanged.bind(_assertThisInitialized(_this));\n    _this._handleConnect = _this._handleConnect.bind(_assertThisInitialized(_this));\n    _this._handleDisconnect = _this._handleDisconnect.bind(_assertThisInitialized(_this));\n    _this._handleStreamDisconnect = _this._handleStreamDisconnect.bind(_assertThisInitialized(_this));\n    _this._sendSync = _this._sendSync.bind(_assertThisInitialized(_this));\n    _this._rpcRequest = _this._rpcRequest.bind(_assertThisInitialized(_this));\n    _this._warnOfDeprecation = _this._warnOfDeprecation.bind(_assertThisInitialized(_this));\n    _this._initializeState = _this._initializeState.bind(_assertThisInitialized(_this));\n    _this.request = _this.request.bind(_assertThisInitialized(_this));\n    _this.send = _this.send.bind(_assertThisInitialized(_this));\n    _this.sendAsync = _this.sendAsync.bind(_assertThisInitialized(_this)); // this.enable = this.enable.bind(this);\n    // setup connectionStream multiplexing\n\n    var mux = new ObjectMultiplex();\n    pump(connectionStream, mux, connectionStream, _this._handleStreamDisconnect.bind(_assertThisInitialized(_this), \"MetaMask\")); // subscribe to metamask public config (one-way)\n\n    _this._publicConfigStore = new ObservableStore({\n      storageKey: \"Metamask-Config\"\n    }); // handle isUnlocked changes, and chainChanged and networkChanged events\n    // this._publicConfigStore.subscribe((stringifiedState) => {\n    //   // This is because we are using store as string\n    //   const state = JSON.parse(stringifiedState as unknown as string);\n    //   if (\"isUnlocked\" in state && state.isUnlocked !== this._state.isUnlocked) {\n    //     this._state.isUnlocked = state.isUnlocked;\n    //     if (!this._state.isUnlocked) {\n    //       // accounts are never exposed when the extension is locked\n    //       this._handleAccountsChanged([]);\n    //     } else {\n    //       // this will get the exposed accounts, if any\n    //       try {\n    //         this._rpcRequest(\n    //           { method: \"eth_accounts\", params: [] },\n    //           NOOP,\n    //           true // indicating that eth_accounts _should_ update accounts\n    //         );\n    //       } catch (_) {\n    //         // Swallow error\n    //       }\n    //     }\n    //   }\n    //   if (\"selectedAddress\" in state && this.selectedAddress !== state.selectedAddress) {\n    //     try {\n    //       this._rpcRequest(\n    //         { method: \"eth_accounts\", params: [] },\n    //         NOOP,\n    //         true // indicating that eth_accounts _should_ update accounts\n    //       );\n    //     } catch (_) {\n    //       // Swallow error\n    //     }\n    //   }\n    //   // Emit chainChanged event on chain change\n    //   if (\"chainId\" in state && state.chainId !== this.chainId) {\n    //     this.chainId = state.chainId || null;\n    //     this.emit(\"chainChanged\", this.chainId);\n    //     // indicate that we've connected, for EIP-1193 compliance\n    //     // we do this here so that iframe can initialize\n    //     if (!this._state.hasEmittedConnection) {\n    //       this._handleConnect(this.chainId);\n    //       this._state.hasEmittedConnection = true;\n    //     }\n    //   }\n    //   // Emit networkChanged event on network change\n    //   if (\"networkVersion\" in state && state.networkVersion !== this.networkVersion) {\n    //     this.networkVersion = state.networkVersion || null;\n    //     this.emit(\"networkChanged\", this.networkVersion);\n    //   }\n    // });\n\n    pump(mux.createStream(\"publicConfig\"), storeAsStream(_this._publicConfigStore), // RPC requests should still work if only this stream fails\n    logStreamDisconnectWarning.bind(_assertThisInitialized(_this), \"MetaMask PublicConfigStore\")); // ignore phishing warning message (handled elsewhere)\n\n    mux.ignoreStream(\"phishing\"); // setup own event listeners\n    // EIP-1193 connect\n\n    _this.on(\"connect\", function () {\n      _this._state.isConnected = true;\n    }); // connect to async provider\n\n\n    var jsonRpcConnection = createStreamMiddleware();\n    pump(jsonRpcConnection.stream, mux.createStream(jsonRpcStreamName), jsonRpcConnection.stream, _this._handleStreamDisconnect.bind(_assertThisInitialized(_this), \"MetaMask RpcProvider\")); // handle RPC requests via dapp-side rpc engine\n\n    var rpcEngine = new JRPCEngine();\n    rpcEngine.push(createIdRemapMiddleware());\n    rpcEngine.push(createErrorMiddleware());\n    rpcEngine.push(jsonRpcConnection.middleware);\n    _this._rpcEngine = rpcEngine; // json rpc notification listener\n\n    jsonRpcConnection.events.on(\"notification\", function (payload) {\n      var method = payload.method,\n          params = payload.params;\n\n      if (method === \"wallet_accountsChanged\") {\n        _this._handleAccountsChanged(params);\n      } else if (method === \"wallet_unlockStateChanged\") {\n        _this._handleUnlockStateChanged(params);\n      } else if (method === \"wallet_chainChanged\") {\n        _this._handleChainChanged(params);\n      } else if (EMITTED_NOTIFICATIONS.includes(payload.method)) {\n        // EIP 1193 subscriptions, per eth-json-rpc-filters/subscriptionManager\n        _this.emit(\"data\", payload); // deprecated\n\n\n        _this.emit(\"notification\", params.result);\n\n        _this.emit(\"message\", {\n          type: method,\n          data: params\n        });\n      } // Backward compatibility for older non EIP 1193 subscriptions\n      // this.emit('data', null, payload)\n\n    });\n    return _this;\n  }\n\n  _createClass(TorusInpageProvider, [{\n    key: \"publicConfigStore\",\n    get: function get() {\n      if (!this._sentWarnings.publicConfigStore) {\n        log.warn(messages.warnings.publicConfigStore);\n        this._sentWarnings.publicConfigStore = true;\n      }\n\n      return this._publicConfigStore;\n    }\n    /**\n     * Returns whether the inpage provider is connected to Torus.\n     */\n\n  }, {\n    key: \"isConnected\",\n    value: function isConnected() {\n      return this._state.isConnected;\n    }\n    /**\n     * Submits an RPC request for the given method, with the given params.\n     * Resolves with the result of the method call, or rejects on error.\n     *\n     * @param args - The RPC request arguments.\n     * @returns A Promise that resolves with the result of the RPC method,\n     * or rejects if an error is encountered.\n     */\n\n  }, {\n    key: \"request\",\n    value: function () {\n      var _request = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(args) {\n        var _this2 = this;\n\n        var method, params;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!(!args || typeof args !== \"object\" || Array.isArray(args))) {\n                  _context2.next = 2;\n                  break;\n                }\n\n                throw ethErrors.rpc.invalidRequest({\n                  message: messages.errors.invalidRequestArgs(),\n                  data: args\n                });\n\n              case 2:\n                method = args.method, params = args.params;\n\n                if (!(typeof method !== \"string\" || method.length === 0)) {\n                  _context2.next = 5;\n                  break;\n                }\n\n                throw ethErrors.rpc.invalidRequest({\n                  message: messages.errors.invalidRequestMethod(),\n                  data: args\n                });\n\n              case 5:\n                if (!(params !== undefined && !Array.isArray(params) && (typeof params !== \"object\" || params === null))) {\n                  _context2.next = 7;\n                  break;\n                }\n\n                throw ethErrors.rpc.invalidRequest({\n                  message: messages.errors.invalidRequestParams(),\n                  data: args\n                });\n\n              case 7:\n                return _context2.abrupt(\"return\", new Promise(function (resolve, reject) {\n                  _this2._rpcRequest({\n                    method: method,\n                    params: params\n                  }, getRpcPromiseCallback(resolve, reject));\n                }));\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function request(_x3) {\n        return _request.apply(this, arguments);\n      }\n\n      return request;\n    }()\n    /**\n     * Submits an RPC request per the given JSON-RPC request object.\n     *\n     * @param payload - The RPC request object.\n     * @param cb - The callback function.\n     */\n\n  }, {\n    key: \"sendAsync\",\n    value: function sendAsync(payload, callback) {\n      this._rpcRequest(payload, callback);\n    }\n    /**\n     * We override the following event methods so that we can warn consumers\n     * about deprecated events:\n     *   addListener, on, once, prependListener, prependOnceListener\n     */\n\n  }, {\n    key: \"addListener\",\n    value: function addListener(eventName, listener) {\n      this._warnOfDeprecation(eventName);\n\n      return _get(_getPrototypeOf(TorusInpageProvider.prototype), \"addListener\", this).call(this, eventName, listener);\n    }\n  }, {\n    key: \"on\",\n    value: function on(eventName, listener) {\n      this._warnOfDeprecation(eventName);\n\n      return _get(_getPrototypeOf(TorusInpageProvider.prototype), \"on\", this).call(this, eventName, listener);\n    }\n  }, {\n    key: \"once\",\n    value: function once(eventName, listener) {\n      this._warnOfDeprecation(eventName);\n\n      return _get(_getPrototypeOf(TorusInpageProvider.prototype), \"once\", this).call(this, eventName, listener);\n    }\n  }, {\n    key: \"prependListener\",\n    value: function prependListener(eventName, listener) {\n      this._warnOfDeprecation(eventName);\n\n      return _get(_getPrototypeOf(TorusInpageProvider.prototype), \"prependListener\", this).call(this, eventName, listener);\n    }\n  }, {\n    key: \"prependOnceListener\",\n    value: function prependOnceListener(eventName, listener) {\n      this._warnOfDeprecation(eventName);\n\n      return _get(_getPrototypeOf(TorusInpageProvider.prototype), \"prependOnceListener\", this).call(this, eventName, listener);\n    } // Private Methods\n    //= ===================\n\n    /**\n     * Constructor helper.\n     * Populates initial state by calling 'wallet_getProviderState' and emits\n     * necessary events.\n     */\n\n  }, {\n    key: \"_initializeState\",\n    value: function () {\n      var _initializeState2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var _yield$this$request, accounts, chainId, isUnlocked, networkVersion;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return this.request({\n                  method: \"wallet_getProviderState\"\n                });\n\n              case 3:\n                _yield$this$request = _context3.sent;\n                accounts = _yield$this$request.accounts;\n                chainId = _yield$this$request.chainId;\n                isUnlocked = _yield$this$request.isUnlocked;\n                networkVersion = _yield$this$request.networkVersion;\n                // indicate that we've connected, for EIP-1193 compliance\n                this.emit(\"connect\", {\n                  chainId: chainId\n                });\n\n                this._handleChainChanged({\n                  chainId: chainId,\n                  networkVersion: networkVersion\n                });\n\n                this._handleUnlockStateChanged({\n                  accounts: accounts,\n                  isUnlocked: isUnlocked\n                });\n\n                this._handleAccountsChanged(accounts);\n\n                _context3.next = 17;\n                break;\n\n              case 14:\n                _context3.prev = 14;\n                _context3.t0 = _context3[\"catch\"](0);\n                log.error(\"MetaMask: Failed to get initial state. Please report this bug.\", _context3.t0);\n\n              case 17:\n                _context3.prev = 17;\n                log.info(\"initialized state\");\n                this._state.initialized = true;\n                this.emit(\"_initialized\");\n                return _context3.finish(17);\n\n              case 22:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[0, 14, 17, 22]]);\n      }));\n\n      function _initializeState() {\n        return _initializeState2.apply(this, arguments);\n      }\n\n      return _initializeState;\n    }()\n    /**\n     * Internal RPC method. Forwards requests to background via the RPC engine.\n     * Also remap ids inbound and outbound.\n     *\n     * @param payload - The RPC request object.\n     * @param callback - The consumer's callback.\n     * @param isInternal - false - Whether the request is internal.\n     */\n\n  }, {\n    key: \"_rpcRequest\",\n    value: function _rpcRequest(payload, callback) {\n      var _this3 = this;\n\n      var isInternal = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var cb = callback;\n      var _payload = payload;\n\n      if (!Array.isArray(_payload)) {\n        if (!_payload.jsonrpc) {\n          _payload.jsonrpc = \"2.0\";\n        }\n\n        if (_payload.method === \"eth_accounts\" || _payload.method === \"eth_requestAccounts\") {\n          // handle accounts changing\n          cb = function cb(err, res) {\n            _this3._handleAccountsChanged(res.result || [], _payload.method === \"eth_accounts\", isInternal);\n\n            callback(err, res);\n          };\n        } else if (_payload.method === \"wallet_getProviderState\") {\n          this._rpcEngine.handle(payload, cb);\n\n          return;\n        }\n      }\n\n      this.tryPreopenHandle(_payload, cb);\n    }\n  }, {\n    key: \"send\",\n    value: function send(methodOrPayload, callbackOrArgs) {\n      var _this4 = this;\n\n      if (!this._sentWarnings.send) {\n        log.warn(messages.warnings.sendDeprecation);\n        this._sentWarnings.send = true;\n      }\n\n      if (typeof methodOrPayload === \"string\" && (!callbackOrArgs || Array.isArray(callbackOrArgs))) {\n        return new Promise(function (resolve, reject) {\n          try {\n            _this4._rpcRequest({\n              method: methodOrPayload,\n              params: callbackOrArgs\n            }, getRpcPromiseCallback(resolve, reject, false));\n          } catch (error) {\n            reject(error);\n          }\n        });\n      }\n\n      if (methodOrPayload && typeof methodOrPayload === \"object\" && typeof callbackOrArgs === \"function\") {\n        return this._rpcRequest(methodOrPayload, callbackOrArgs);\n      }\n\n      return this._sendSync(methodOrPayload);\n    }\n    /**\n     * DEPRECATED.\n     * Internal backwards compatibility method, used in send.\n     */\n\n  }, {\n    key: \"_sendSync\",\n    value: function _sendSync(payload) {\n      var result;\n\n      switch (payload.method) {\n        case \"eth_accounts\":\n          result = this.selectedAddress ? [this.selectedAddress] : [];\n          break;\n\n        case \"eth_coinbase\":\n          result = this.selectedAddress || null;\n          break;\n\n        case \"eth_uninstallFilter\":\n          this._rpcRequest(payload, NOOP);\n\n          result = true;\n          break;\n\n        case \"net_version\":\n          result = this.networkVersion || null;\n          break;\n\n        default:\n          throw new Error(messages.errors.unsupportedSync(payload.method));\n      }\n\n      return {\n        id: payload.id,\n        jsonrpc: payload.jsonrpc,\n        result: result\n      };\n    }\n    /**\n     * When the provider becomes connected, updates internal state and emits\n     * required events. Idempotent.\n     *\n     * @param chainId - The ID of the newly connected chain.\n     * emits MetaMaskInpageProvider#connect\n     */\n\n  }, {\n    key: \"_handleConnect\",\n    value: function _handleConnect(chainId) {\n      if (!this._state.isConnected) {\n        this._state.isConnected = true;\n        this.emit(\"connect\", {\n          chainId: chainId\n        });\n        log.debug(messages.info.connected(chainId));\n      }\n    }\n    /**\n     * When the provider becomes disconnected, updates internal state and emits\n     * required events. Idempotent with respect to the isRecoverable parameter.\n     *\n     * Error codes per the CloseEvent status codes as required by EIP-1193:\n     * https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n     *\n     * @param isRecoverable - Whether the disconnection is recoverable.\n     * @param errorMessage - A custom error message.\n     * emits MetaMaskInpageProvider#disconnect\n     */\n\n  }, {\n    key: \"_handleDisconnect\",\n    value: function _handleDisconnect(isRecoverable, errorMessage) {\n      if (this._state.isConnected || !this._state.isPermanentlyDisconnected && !isRecoverable) {\n        this._state.isConnected = false;\n        var error;\n\n        if (isRecoverable) {\n          error = new EthereumRpcError(1013, // Try again later\n          errorMessage || messages.errors.disconnected());\n          log.debug(error);\n        } else {\n          error = new EthereumRpcError(1011, // Internal error\n          errorMessage || messages.errors.permanentlyDisconnected());\n          log.error(error);\n          this.chainId = null;\n          this._state.accounts = null;\n          this.selectedAddress = null;\n          this._state.isUnlocked = false;\n          this._state.isPermanentlyDisconnected = true;\n        }\n\n        this.emit(\"disconnect\", error);\n      }\n    }\n    /**\n     * Called when connection is lost to critical streams.\n     *\n     * emits MetamaskInpageProvider#disconnect\n     */\n\n  }, {\n    key: \"_handleStreamDisconnect\",\n    value: function _handleStreamDisconnect(streamName, error) {\n      logStreamDisconnectWarning(streamName, error, this);\n\n      this._handleDisconnect(false, error ? error.message : undefined);\n    }\n    /**\n     * Called when accounts may have changed.\n     */\n\n  }, {\n    key: \"_handleAccountsChanged\",\n    value: function _handleAccountsChanged(accounts) {\n      var isEthAccounts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var isInternal = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false; // defensive programming\n\n      var finalAccounts = accounts;\n\n      if (!Array.isArray(finalAccounts)) {\n        log.error(\"MetaMask: Received non-array accounts parameter. Please report this bug.\", finalAccounts);\n        finalAccounts = [];\n      }\n\n      var _iterator = _createForOfIteratorHelper(accounts),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var account = _step.value;\n\n          if (typeof account !== \"string\") {\n            log.error(\"MetaMask: Received non-string account. Please report this bug.\", accounts);\n            finalAccounts = [];\n            break;\n          }\n        } // emit accountsChanged if anything about the accounts array has changed\n\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      if (!dequal(this._state.accounts, finalAccounts)) {\n        // we should always have the correct accounts even before eth_accounts\n        // returns, except in cases where isInternal is true\n        if (isEthAccounts && Array.isArray(this._state.accounts) && this._state.accounts.length > 0 && !isInternal) {\n          log.error('MetaMask: \"eth_accounts\" unexpectedly updated accounts. Please report this bug.', finalAccounts);\n        }\n\n        this._state.accounts = finalAccounts;\n        this.emit(\"accountsChanged\", finalAccounts);\n      } // handle selectedAddress\n\n\n      if (this.selectedAddress !== finalAccounts[0]) {\n        this.selectedAddress = finalAccounts[0] || null;\n      }\n    }\n    /**\n     * Upon receipt of a new chainId and networkVersion, emits corresponding\n     * events and sets relevant public state.\n     * Does nothing if neither the chainId nor the networkVersion are different\n     * from existing values.\n     *\n     * emits MetamaskInpageProvider#chainChanged\n     * @param networkInfo - An object with network info.\n     */\n\n  }, {\n    key: \"_handleChainChanged\",\n    value: function _handleChainChanged() {\n      var _ref6 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          chainId = _ref6.chainId,\n          networkVersion = _ref6.networkVersion;\n\n      if (!chainId || !networkVersion) {\n        log.error(\"MetaMask: Received invalid network parameters. Please report this bug.\", {\n          chainId: chainId,\n          networkVersion: networkVersion\n        });\n        return;\n      }\n\n      if (networkVersion === \"loading\") {\n        this._handleDisconnect(true);\n      } else {\n        this._handleConnect(chainId);\n\n        if (chainId !== this.chainId) {\n          this.chainId = chainId;\n\n          if (this._state.initialized) {\n            this.emit(\"chainChanged\", this.chainId);\n          }\n        }\n      }\n    }\n    /**\n     * Upon receipt of a new isUnlocked state, sets relevant public state.\n     * Calls the accounts changed handler with the received accounts, or an empty\n     * array.\n     *\n     * Does nothing if the received value is equal to the existing value.\n     * There are no lock/unlock events.\n     *\n     * @param opts - Options bag.\n     */\n\n  }, {\n    key: \"_handleUnlockStateChanged\",\n    value: function _handleUnlockStateChanged() {\n      var _ref7 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          accounts = _ref7.accounts,\n          isUnlocked = _ref7.isUnlocked;\n\n      if (typeof isUnlocked !== \"boolean\") {\n        log.error(\"MetaMask: Received invalid isUnlocked parameter. Please report this bug.\", {\n          isUnlocked: isUnlocked\n        });\n        return;\n      }\n\n      if (isUnlocked !== this._state.isUnlocked) {\n        this._state.isUnlocked = isUnlocked;\n\n        this._handleAccountsChanged(accounts || []);\n      }\n    }\n    /**\n     * Warns of deprecation for the given event, if applicable.\n     */\n\n  }, {\n    key: \"_warnOfDeprecation\",\n    value: function _warnOfDeprecation(eventName) {\n      if (this._sentWarnings.events[eventName] === false) {\n        log.warn(messages.warnings.events[eventName]);\n        this._sentWarnings.events[eventName] = true;\n      }\n    }\n  }]);\n\n  return TorusInpageProvider;\n}(SafeEventEmitter);\n\n_defineProperty(TorusInpageProvider, \"_defaultState\", {\n  accounts: null,\n  isConnected: false,\n  isUnlocked: false,\n  initialized: false,\n  isPermanentlyDisconnected: false,\n  hasEmittedConnection: false\n});\n\nvar defaults = function defaults(options) {\n  return {\n    algorithms: options.algorithms || [\"sha256\"],\n    delimiter: options.delimiter || \" \",\n    full: options.full || false\n  };\n}; // Generate list of hashes\n\n\nvar hashes = function hashes(options, data) {\n  var internalHashes = {};\n  options.algorithms.forEach(function (algorithm) {\n    internalHashes[algorithm] = createHash(algorithm).update(data, \"utf8\").digest(\"base64\");\n  });\n  return internalHashes;\n}; // Build an integrity string\n\n\nvar integrity = function integrity(options, sri) {\n  var output = \"\"; // Hash list\n\n  output += Object.keys(sri.hashes).map(function (algorithm) {\n    return \"\".concat(algorithm, \"-\").concat(sri.hashes[algorithm]);\n  }).join(options.delimiter);\n  return output;\n};\n\nvar main = function main(options, data) {\n  // Defaults\n  var finalOptions = defaults(options);\n  var sri = {\n    hashes: hashes(finalOptions, data),\n    integrity: undefined\n  };\n  sri.integrity = integrity(finalOptions, sri);\n  return finalOptions.full ? sri : sri.integrity;\n};\n\nvar PopupHandler = /*#__PURE__*/function (_EventEmitter) {\n  _inherits(PopupHandler, _EventEmitter);\n\n  var _super2 = _createSuper(PopupHandler);\n\n  function PopupHandler(_ref) {\n    var _this5;\n\n    _classCallCheck(this, PopupHandler);\n\n    var url = _ref.url,\n        target = _ref.target,\n        features = _ref.features;\n    _this5 = _super2.call(this);\n\n    _defineProperty(_assertThisInitialized(_this5), \"url\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this5), \"target\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this5), \"features\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this5), \"window\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this5), \"windowTimer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this5), \"iClosedWindow\", void 0);\n\n    _this5.url = url;\n    _this5.target = target || \"_blank\";\n    _this5.features = features || getPopupFeatures();\n    _this5.window = undefined;\n    _this5.windowTimer = undefined;\n    _this5.iClosedWindow = false;\n\n    _this5._setupTimer();\n\n    return _this5;\n  }\n\n  _createClass(PopupHandler, [{\n    key: \"_setupTimer\",\n    value: function _setupTimer() {\n      var _this6 = this;\n\n      this.windowTimer = Number(setInterval(function () {\n        if (_this6.window && _this6.window.closed) {\n          clearInterval(_this6.windowTimer);\n\n          if (!_this6.iClosedWindow) {\n            _this6.emit(\"close\");\n          }\n\n          _this6.iClosedWindow = false;\n          _this6.window = undefined;\n        }\n\n        if (_this6.window === undefined) clearInterval(_this6.windowTimer);\n      }, 500));\n    }\n  }, {\n    key: \"open\",\n    value: function open() {\n      var _this$window;\n\n      this.window = window.open(this.url.href, this.target, this.features);\n      if ((_this$window = this.window) !== null && _this$window !== void 0 && _this$window.focus) this.window.focus();\n      return Promise.resolve();\n    }\n  }, {\n    key: \"close\",\n    value: function close() {\n      this.iClosedWindow = true;\n      if (this.window) this.window.close();\n    }\n  }, {\n    key: \"redirect\",\n    value: function redirect(locationReplaceOnRedirect) {\n      if (locationReplaceOnRedirect) {\n        window.location.replace(this.url.href);\n      } else {\n        window.location.href = this.url.href;\n      }\n    }\n  }]);\n\n  return PopupHandler;\n}(EventEmitter);\n/**\n * Returns whether the given image URL exists\n * @param url - the url of the image\n * @returns - whether the image exists\n */\n\n\nfunction imgExists(url) {\n  return new Promise(function (resolve, reject) {\n    try {\n      var img = document.createElement(\"img\");\n\n      img.onload = function () {\n        return resolve(true);\n      };\n\n      img.onerror = function () {\n        return resolve(false);\n      };\n\n      img.src = url;\n    } catch (e) {\n      reject(e);\n    }\n  });\n}\n/**\n * Extracts a name for the site from the DOM\n */\n\n\nvar getSiteName = function getSiteName(window) {\n  var document = window.document;\n  var siteName = document.querySelector('head > meta[property=\"og:site_name\"]');\n\n  if (siteName) {\n    return siteName.content;\n  }\n\n  var metaTitle = document.querySelector('head > meta[name=\"title\"]');\n\n  if (metaTitle) {\n    return metaTitle.content;\n  }\n\n  if (document.title && document.title.length > 0) {\n    return document.title;\n  }\n\n  return window.location.hostname;\n};\n/**\n * Extracts an icon for the site from the DOM\n */\n\n\nfunction getSiteIcon(_x4) {\n  return _getSiteIcon.apply(this, arguments);\n}\n/**\n * Gets site metadata and returns it\n *\n */\n\n\nfunction _getSiteIcon() {\n  _getSiteIcon = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee14(window) {\n    var document, icon;\n    return _regeneratorRuntime.wrap(function _callee14$(_context14) {\n      while (1) {\n        switch (_context14.prev = _context14.next) {\n          case 0:\n            document = window.document; // Use the site's favicon if it exists\n\n            icon = document.querySelector('head > link[rel=\"shortcut icon\"]');\n            _context14.t0 = icon;\n\n            if (!_context14.t0) {\n              _context14.next = 7;\n              break;\n            }\n\n            _context14.next = 6;\n            return imgExists(icon.href);\n\n          case 6:\n            _context14.t0 = _context14.sent;\n\n          case 7:\n            if (!_context14.t0) {\n              _context14.next = 9;\n              break;\n            }\n\n            return _context14.abrupt(\"return\", icon.href);\n\n          case 9:\n            // Search through available icons in no particular order\n            icon = Array.from(document.querySelectorAll('head > link[rel=\"icon\"]')).find(function (_icon) {\n              return Boolean(_icon.href);\n            });\n            _context14.t1 = icon;\n\n            if (!_context14.t1) {\n              _context14.next = 15;\n              break;\n            }\n\n            _context14.next = 14;\n            return imgExists(icon.href);\n\n          case 14:\n            _context14.t1 = _context14.sent;\n\n          case 15:\n            if (!_context14.t1) {\n              _context14.next = 17;\n              break;\n            }\n\n            return _context14.abrupt(\"return\", icon.href);\n\n          case 17:\n            return _context14.abrupt(\"return\", null);\n\n          case 18:\n          case \"end\":\n            return _context14.stop();\n        }\n      }\n    }, _callee14);\n  }));\n  return _getSiteIcon.apply(this, arguments);\n}\n\nvar getSiteMetadata = /*#__PURE__*/function () {\n  var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.t0 = getSiteName(window);\n            _context4.next = 3;\n            return getSiteIcon(window);\n\n          case 3:\n            _context4.t1 = _context4.sent;\n            return _context4.abrupt(\"return\", {\n              name: _context4.t0,\n              icon: _context4.t1\n            });\n\n          case 5:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function getSiteMetadata() {\n    return _ref8.apply(this, arguments);\n  };\n}();\n/**\n * Sends site metadata over an RPC request.\n */\n\n\nfunction sendSiteMetadata(_x5) {\n  return _sendSiteMetadata.apply(this, arguments);\n}\n\nfunction _sendSiteMetadata() {\n  _sendSiteMetadata = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee15(engine) {\n    var domainMetadata;\n    return _regeneratorRuntime.wrap(function _callee15$(_context15) {\n      while (1) {\n        switch (_context15.prev = _context15.next) {\n          case 0:\n            _context15.prev = 0;\n            _context15.next = 3;\n            return getSiteMetadata();\n\n          case 3:\n            domainMetadata = _context15.sent;\n            // call engine.handle directly to avoid normal RPC request handling\n            engine.handle({\n              jsonrpc: \"2.0\",\n              id: getPreopenInstanceId(),\n              method: \"wallet_sendDomainMetadata\",\n              params: domainMetadata\n            }, NOOP);\n            _context15.next = 10;\n            break;\n\n          case 7:\n            _context15.prev = 7;\n            _context15.t0 = _context15[\"catch\"](0);\n            log.error({\n              message: messages.errors.sendSiteMetadata(),\n              originalError: _context15.t0\n            });\n\n          case 10:\n          case \"end\":\n            return _context15.stop();\n        }\n      }\n    }, _callee15, null, [[0, 7]]);\n  }));\n  return _sendSiteMetadata.apply(this, arguments);\n}\n\nvar _excluded = [\"host\", \"chainId\", \"networkName\"];\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nvar defaultVerifiers = (_defaultVerifiers = {}, _defineProperty2(_defaultVerifiers, LOGIN_PROVIDER.GOOGLE, true), _defineProperty2(_defaultVerifiers, LOGIN_PROVIDER.FACEBOOK, true), _defineProperty2(_defaultVerifiers, LOGIN_PROVIDER.REDDIT, true), _defineProperty2(_defaultVerifiers, LOGIN_PROVIDER.TWITCH, true), _defineProperty2(_defaultVerifiers, LOGIN_PROVIDER.DISCORD, true), _defaultVerifiers);\nvar iframeIntegrity = \"sha384-YoBKuLPbF12Zj+b1zD3pfk5WTvgz6VU4AQtX0oy9qBWZKZIoAx+kY64Ic/d784Vm\";\nvar expectedCacheControlHeader = \"max-age=3600\";\nvar UNSAFE_METHODS = [\"eth_sendTransaction\", \"eth_signTypedData\", \"eth_signTypedData_v3\", \"eth_signTypedData_v4\", \"personal_sign\", \"eth_getEncryptionPublicKey\", \"eth_decrypt\"];\nvar isLocalStorageAvailable = storageAvailable(\"localStorage\"); // preload for iframe doesn't work https://bugs.chromium.org/p/chromium/issues/detail?id=593267\n\n(function () {\n  var _preLoadIframe = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n    var torusIframeHtml, _yield$getTorusUrl, torusUrl;\n\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.prev = 0;\n\n            if (!(typeof document === \"undefined\")) {\n              _context5.next = 3;\n              break;\n            }\n\n            return _context5.abrupt(\"return\");\n\n          case 3:\n            torusIframeHtml = document.createElement(\"link\");\n            _context5.next = 6;\n            return getTorusUrl(\"production\", {\n              check: false,\n              hash: iframeIntegrity,\n              version: \"\"\n            });\n\n          case 6:\n            _yield$getTorusUrl = _context5.sent;\n            torusUrl = _yield$getTorusUrl.torusUrl;\n            torusIframeHtml.href = \"\".concat(torusUrl, \"/popup\");\n            torusIframeHtml.crossOrigin = \"anonymous\";\n            torusIframeHtml.type = \"text/html\";\n            torusIframeHtml.rel = \"prefetch\";\n\n            if (torusIframeHtml.relList && torusIframeHtml.relList.supports) {\n              if (torusIframeHtml.relList.supports(\"prefetch\")) {\n                document.head.appendChild(torusIframeHtml);\n              }\n            }\n\n            _context5.next = 18;\n            break;\n\n          case 15:\n            _context5.prev = 15;\n            _context5.t0 = _context5[\"catch\"](0);\n            log.warn(_context5.t0);\n\n          case 18:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[0, 15]]);\n  }));\n\n  function preLoadIframe() {\n    return _preLoadIframe.apply(this, arguments);\n  }\n\n  return preLoadIframe;\n})()();\n\nvar Torus = /*#__PURE__*/function () {\n  function Torus() {\n    _classCallCheck(this, Torus);\n\n    var _ref9 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref9$buttonPosition = _ref9.buttonPosition,\n        buttonPosition = _ref9$buttonPosition === void 0 ? BUTTON_POSITION.BOTTOM_LEFT : _ref9$buttonPosition,\n        _ref9$modalZIndex = _ref9.modalZIndex,\n        modalZIndex = _ref9$modalZIndex === void 0 ? 99999 : _ref9$modalZIndex,\n        _ref9$apiKey = _ref9.apiKey,\n        apiKey = _ref9$apiKey === void 0 ? \"torus-default\" : _ref9$apiKey;\n\n    _defineProperty(this, \"buttonPosition\", BUTTON_POSITION.BOTTOM_LEFT);\n\n    _defineProperty(this, \"torusUrl\", void 0);\n\n    _defineProperty(this, \"torusIframe\", void 0);\n\n    _defineProperty(this, \"styleLink\", void 0);\n\n    _defineProperty(this, \"isLoggedIn\", void 0);\n\n    _defineProperty(this, \"isInitialized\", void 0);\n\n    _defineProperty(this, \"torusWidgetVisibility\", void 0);\n\n    _defineProperty(this, \"torusAlert\", void 0);\n\n    _defineProperty(this, \"nodeDetailManager\", void 0);\n\n    _defineProperty(this, \"torusJs\", void 0);\n\n    _defineProperty(this, \"apiKey\", void 0);\n\n    _defineProperty(this, \"modalZIndex\", void 0);\n\n    _defineProperty(this, \"alertZIndex\", void 0);\n\n    _defineProperty(this, \"torusAlertContainer\", void 0);\n\n    _defineProperty(this, \"isIframeFullScreen\", void 0);\n\n    _defineProperty(this, \"whiteLabel\", void 0);\n\n    _defineProperty(this, \"requestedVerifier\", void 0);\n\n    _defineProperty(this, \"currentVerifier\", void 0);\n\n    _defineProperty(this, \"embedTranslations\", void 0);\n\n    _defineProperty(this, \"ethereum\", void 0);\n\n    _defineProperty(this, \"provider\", void 0);\n\n    _defineProperty(this, \"communicationMux\", void 0);\n\n    _defineProperty(this, \"isLoginCallback\", void 0);\n\n    _defineProperty(this, \"dappStorageKey\", void 0);\n\n    _defineProperty(this, \"paymentProviders\", configuration.paymentProviders);\n\n    _defineProperty(this, \"loginHint\", \"\");\n\n    _defineProperty(this, \"useWalletConnect\", void 0);\n\n    this.buttonPosition = buttonPosition;\n    this.torusUrl = \"\";\n    this.isLoggedIn = false; // ethereum.enable working\n\n    this.isInitialized = false; // init done\n\n    this.torusWidgetVisibility = true;\n    this.requestedVerifier = \"\";\n    this.currentVerifier = \"\";\n    this.nodeDetailManager = new NodeDetailManager();\n    this.torusJs = new TorusJs({\n      metadataHost: \"https://metadata.tor.us\",\n      allowHost: \"https://signer.tor.us/api/allow\"\n    });\n    this.apiKey = apiKey;\n    TorusJs.setAPIKey(apiKey);\n    setAPIKey(apiKey);\n    this.modalZIndex = modalZIndex;\n    this.alertZIndex = modalZIndex + 1000;\n    this.isIframeFullScreen = false;\n    this.dappStorageKey = \"\";\n  }\n\n  _createClass(Torus, [{\n    key: \"init\",\n    value: function () {\n      var _init = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {\n        var _this7 = this;\n\n        var _ref10,\n            _ref10$buildEnv,\n            buildEnv,\n            _ref10$enableLogging,\n            enableLogging,\n            _ref10$enabledVerifie,\n            enabledVerifiers,\n            _ref10$network,\n            network,\n            _ref10$loginConfig,\n            loginConfig,\n            _ref10$showTorusButto,\n            showTorusButton,\n            _ref10$integrity,\n            integrity,\n            whiteLabel,\n            _ref10$skipTKey,\n            skipTKey,\n            _ref10$useLocalStorag,\n            useLocalStorage,\n            _ref10$useWalletConne,\n            useWalletConnect,\n            _yield$getTorusUrl2,\n            torusUrl,\n            logLevel,\n            dappStorageKey,\n            localStorageKey,\n            storedKey,\n            generatedKey,\n            torusIframeUrl,\n            link,\n            _ref11,\n            _ref11$defaultLanguag,\n            defaultLanguage,\n            _ref11$customTranslat,\n            customTranslations,\n            mergedTranslations,\n            languageTranslations,\n            handleSetup,\n            fetchUrl,\n            resp,\n            response,\n            calculatedIntegrity,\n            _args8 = arguments;\n\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _ref10 = _args8.length > 0 && _args8[0] !== undefined ? _args8[0] : {}, _ref10$buildEnv = _ref10.buildEnv, buildEnv = _ref10$buildEnv === void 0 ? TORUS_BUILD_ENV.PRODUCTION : _ref10$buildEnv, _ref10$enableLogging = _ref10.enableLogging, enableLogging = _ref10$enableLogging === void 0 ? false : _ref10$enableLogging, _ref10$enabledVerifie = _ref10.enabledVerifiers, enabledVerifiers = _ref10$enabledVerifie === void 0 ? defaultVerifiers : _ref10$enabledVerifie, _ref10$network = _ref10.network, network = _ref10$network === void 0 ? {\n                  host: \"mainnet\",\n                  chainId: null,\n                  networkName: \"\",\n                  blockExplorer: \"\",\n                  ticker: \"\",\n                  tickerName: \"\"\n                } : _ref10$network, _ref10$loginConfig = _ref10.loginConfig, loginConfig = _ref10$loginConfig === void 0 ? {} : _ref10$loginConfig, _ref10$showTorusButto = _ref10.showTorusButton, showTorusButton = _ref10$showTorusButto === void 0 ? true : _ref10$showTorusButto, _ref10$integrity = _ref10.integrity, integrity = _ref10$integrity === void 0 ? {\n                  check: false,\n                  hash: iframeIntegrity,\n                  version: \"\"\n                } : _ref10$integrity, whiteLabel = _ref10.whiteLabel, _ref10$skipTKey = _ref10.skipTKey, skipTKey = _ref10$skipTKey === void 0 ? false : _ref10$skipTKey, _ref10$useLocalStorag = _ref10.useLocalStorage, useLocalStorage = _ref10$useLocalStorag === void 0 ? false : _ref10$useLocalStorag, _ref10$useWalletConne = _ref10.useWalletConnect, useWalletConnect = _ref10$useWalletConne === void 0 ? false : _ref10$useWalletConne;\n\n                if (!this.isInitialized) {\n                  _context8.next = 3;\n                  break;\n                }\n\n                throw new Error(\"Already initialized\");\n\n              case 3:\n                _context8.next = 5;\n                return getTorusUrl(buildEnv, integrity);\n\n              case 5:\n                _yield$getTorusUrl2 = _context8.sent;\n                torusUrl = _yield$getTorusUrl2.torusUrl;\n                logLevel = _yield$getTorusUrl2.logLevel;\n                log.info(torusUrl, \"url loaded\");\n                this.torusUrl = torusUrl;\n                this.whiteLabel = whiteLabel;\n                this.useWalletConnect = useWalletConnect;\n                log.setDefaultLevel(logLevel);\n                if (enableLogging) log.enableAll();else log.disableAll();\n                this.torusWidgetVisibility = showTorusButton;\n                dappStorageKey = \"\";\n\n                if (isLocalStorageAvailable && useLocalStorage) {\n                  localStorageKey = \"\".concat(configuration.localStorageKeyPrefix).concat(window.location.hostname);\n                  storedKey = window.localStorage.getItem(localStorageKey);\n                  if (storedKey) dappStorageKey = storedKey;else {\n                    generatedKey = \"torus-app-\".concat(getPreopenInstanceId());\n                    window.localStorage.setItem(localStorageKey, generatedKey);\n                    dappStorageKey = generatedKey;\n                  }\n                }\n\n                this.dappStorageKey = dappStorageKey;\n                torusIframeUrl = new URL(torusUrl);\n                if (torusIframeUrl.pathname.endsWith(\"/\")) torusIframeUrl.pathname += \"popup\";else torusIframeUrl.pathname += \"/popup\";\n\n                if (dappStorageKey) {\n                  torusIframeUrl.hash = \"#dappStorageKey=\".concat(dappStorageKey);\n                } // Iframe code\n\n\n                this.torusIframe = htmlToElement(\"<iframe\\n        id=\\\"torusIframe\\\"\\n        allow=\".concat(useWalletConnect ? \"camera\" : \"\", \"\\n        class=\\\"torusIframe\\\"\\n        src=\\\"\").concat(torusIframeUrl.href, \"\\\"\\n        style=\\\"display: none; position: fixed; top: 0; right: 0; width: 100%;\\n        height: 100%; border: none; border-radius: 0; z-index: \").concat(this.modalZIndex, \"\\\"\\n      ></iframe>\"));\n                this.torusAlertContainer = htmlToElement('<div id=\"torusAlertContainer\"></div>');\n                this.torusAlertContainer.style.display = \"none\";\n                this.torusAlertContainer.style.setProperty(\"z-index\", this.alertZIndex.toString());\n                link = window.document.createElement(\"link\");\n                link.setAttribute(\"rel\", \"stylesheet\");\n                link.setAttribute(\"type\", \"text/css\");\n                link.setAttribute(\"href\", \"\".concat(torusUrl, \"/css/widget.css\"));\n                this.styleLink = link;\n                _ref11 = this.whiteLabel || {}, _ref11$defaultLanguag = _ref11.defaultLanguage, defaultLanguage = _ref11$defaultLanguag === void 0 ? getUserLanguage() : _ref11$defaultLanguag, _ref11$customTranslat = _ref11.customTranslations, customTranslations = _ref11$customTranslat === void 0 ? {} : _ref11$customTranslat;\n                mergedTranslations = deepmerge(configuration.translations, customTranslations);\n                languageTranslations = mergedTranslations[defaultLanguage] || configuration.translations[getUserLanguage()];\n                this.embedTranslations = languageTranslations.embed;\n\n                handleSetup = /*#__PURE__*/function () {\n                  var _ref12 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n                    return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n                      while (1) {\n                        switch (_context7.prev = _context7.next) {\n                          case 0:\n                            _context7.next = 2;\n                            return documentReady();\n\n                          case 2:\n                            return _context7.abrupt(\"return\", new Promise(function (resolve, reject) {\n                              _this7.torusIframe.onload = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n                                var initStream;\n                                return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n                                  while (1) {\n                                    switch (_context6.prev = _context6.next) {\n                                      case 0:\n                                        // only do this if iframe is not full screen\n                                        _this7._setupWeb3();\n\n                                        initStream = _this7.communicationMux.getStream(\"init_stream\");\n                                        initStream.on(\"data\", function (chunk) {\n                                          var name = chunk.name,\n                                              data = chunk.data,\n                                              error = chunk.error;\n\n                                          if (name === \"init_complete\" && data.success) {\n                                            // resolve promise\n                                            _this7.isInitialized = true;\n\n                                            _this7._displayIframe(_this7.isIframeFullScreen);\n\n                                            resolve(undefined);\n                                          } else if (error) {\n                                            reject(new Error(error));\n                                          }\n                                        });\n                                        initStream.write({\n                                          name: \"init_stream\",\n                                          data: {\n                                            enabledVerifiers: enabledVerifiers,\n                                            loginConfig: loginConfig,\n                                            whiteLabel: _this7.whiteLabel,\n                                            buttonPosition: _this7.buttonPosition,\n                                            torusWidgetVisibility: _this7.torusWidgetVisibility,\n                                            apiKey: _this7.apiKey,\n                                            skipTKey: skipTKey,\n                                            network: network\n                                          }\n                                        });\n\n                                      case 4:\n                                      case \"end\":\n                                        return _context6.stop();\n                                    }\n                                  }\n                                }, _callee6);\n                              }));\n                              window.document.head.appendChild(_this7.styleLink);\n                              window.document.body.appendChild(_this7.torusIframe);\n                              window.document.body.appendChild(_this7.torusAlertContainer);\n                            }));\n\n                          case 3:\n                          case \"end\":\n                            return _context7.stop();\n                        }\n                      }\n                    }, _callee7);\n                  }));\n\n                  return function handleSetup() {\n                    return _ref12.apply(this, arguments);\n                  };\n                }();\n\n                if (!(buildEnv === \"production\" && integrity.check)) {\n                  _context8.next = 56;\n                  break;\n                }\n\n                // hacky solution to check for iframe integrity\n                fetchUrl = \"\".concat(torusUrl, \"/popup\");\n                _context8.next = 39;\n                return fetch(fetchUrl, {\n                  cache: \"reload\"\n                });\n\n              case 39:\n                resp = _context8.sent;\n\n                if (!(resp.headers.get(\"Cache-Control\") !== expectedCacheControlHeader)) {\n                  _context8.next = 42;\n                  break;\n                }\n\n                throw new Error(\"Unexpected Cache-Control headers, got \".concat(resp.headers.get(\"Cache-Control\")));\n\n              case 42:\n                _context8.next = 44;\n                return resp.text();\n\n              case 44:\n                response = _context8.sent;\n                calculatedIntegrity = main({\n                  algorithms: [\"sha384\"]\n                }, response);\n                log.info(calculatedIntegrity, \"integrity\");\n\n                if (!(calculatedIntegrity === integrity.hash)) {\n                  _context8.next = 52;\n                  break;\n                }\n\n                _context8.next = 50;\n                return handleSetup();\n\n              case 50:\n                _context8.next = 54;\n                break;\n\n              case 52:\n                this.clearInit();\n                throw new Error(\"Integrity check failed\");\n\n              case 54:\n                _context8.next = 58;\n                break;\n\n              case 56:\n                _context8.next = 58;\n                return handleSetup();\n\n              case 58:\n                return _context8.abrupt(\"return\", undefined);\n\n              case 59:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function init() {\n        return _init.apply(this, arguments);\n      }\n\n      return init;\n    }()\n  }, {\n    key: \"login\",\n    value: function login() {\n      var _ref14 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref14$verifier = _ref14.verifier,\n          verifier = _ref14$verifier === void 0 ? \"\" : _ref14$verifier,\n          _ref14$login_hint = _ref14.login_hint,\n          loginHint = _ref14$login_hint === void 0 ? \"\" : _ref14$login_hint;\n\n      if (!this.isInitialized) throw new Error(\"Call init() first\");\n      this.requestedVerifier = verifier;\n      this.loginHint = loginHint;\n      return this.ethereum.enable();\n    }\n  }, {\n    key: \"logout\",\n    value: function logout() {\n      var _this8 = this;\n\n      return new Promise(function (resolve, reject) {\n        if (!_this8.isLoggedIn) {\n          reject(new Error(\"User has not logged in yet\"));\n          return;\n        }\n\n        var logOutStream = _this8.communicationMux.getStream(\"logout\");\n\n        logOutStream.write({\n          name: \"logOut\"\n        });\n\n        var statusStream = _this8.communicationMux.getStream(\"status\");\n\n        var statusStreamHandler = function statusStreamHandler(status) {\n          if (!status.loggedIn) {\n            _this8.isLoggedIn = false;\n            _this8.currentVerifier = \"\";\n            _this8.requestedVerifier = \"\";\n            resolve();\n          } else reject(new Error(\"Some Error Occured\"));\n        };\n\n        handleStream(statusStream, \"data\", statusStreamHandler);\n      });\n    }\n  }, {\n    key: \"cleanUp\",\n    value: function () {\n      var _cleanUp = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9() {\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                if (!this.isLoggedIn) {\n                  _context9.next = 3;\n                  break;\n                }\n\n                _context9.next = 3;\n                return this.logout();\n\n              case 3:\n                this.clearInit();\n\n              case 4:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function cleanUp() {\n        return _cleanUp.apply(this, arguments);\n      }\n\n      return cleanUp;\n    }()\n  }, {\n    key: \"clearInit\",\n    value: function clearInit() {\n      function isElement(element) {\n        return element instanceof Element || element instanceof HTMLDocument;\n      }\n\n      if (isElement(this.styleLink) && window.document.body.contains(this.styleLink)) {\n        this.styleLink.remove();\n        this.styleLink = undefined;\n      }\n\n      if (isElement(this.torusIframe) && window.document.body.contains(this.torusIframe)) {\n        this.torusIframe.remove();\n        this.torusIframe = undefined;\n      }\n\n      if (isElement(this.torusAlertContainer) && window.document.body.contains(this.torusAlertContainer)) {\n        this.torusAlert = undefined;\n        this.torusAlertContainer.remove();\n        this.torusAlertContainer = undefined;\n      }\n\n      this.isInitialized = false;\n    }\n  }, {\n    key: \"hideTorusButton\",\n    value: function hideTorusButton() {\n      this.torusWidgetVisibility = false;\n\n      this._sendWidgetVisibilityStatus(false);\n\n      this._displayIframe();\n    }\n  }, {\n    key: \"showTorusButton\",\n    value: function showTorusButton() {\n      this.torusWidgetVisibility = true;\n\n      this._sendWidgetVisibilityStatus(true);\n\n      this._displayIframe();\n    }\n  }, {\n    key: \"setProvider\",\n    value: function setProvider() {\n      var _this9 = this;\n\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      var _ref$host = _ref.host,\n          host = _ref$host === void 0 ? \"mainnet\" : _ref$host,\n          _ref$chainId = _ref.chainId,\n          chainId = _ref$chainId === void 0 ? null : _ref$chainId,\n          _ref$networkName = _ref.networkName,\n          networkName = _ref$networkName === void 0 ? \"\" : _ref$networkName,\n          rest = _objectWithoutProperties(_ref, _excluded);\n\n      return new Promise(function (resolve, reject) {\n        var providerChangeStream = _this9.communicationMux.getStream(\"provider_change\");\n\n        var handler = function handler(chunk) {\n          var _chunk$data = chunk.data,\n              err = _chunk$data.err,\n              success = _chunk$data.success;\n          log.info(chunk);\n\n          if (err) {\n            reject(err);\n          } else if (success) {\n            resolve();\n          } else reject(new Error(\"some error occured\"));\n        };\n\n        handleStream(providerChangeStream, \"data\", handler);\n        var preopenInstanceId = getPreopenInstanceId();\n\n        _this9._handleWindow(preopenInstanceId, {\n          target: \"_blank\",\n          features: FEATURES_PROVIDER_CHANGE_WINDOW\n        });\n\n        providerChangeStream.write({\n          name: \"show_provider_change\",\n          data: {\n            network: _objectSpread({\n              host: host,\n              chainId: chainId,\n              networkName: networkName\n            }, rest),\n            preopenInstanceId: preopenInstanceId,\n            override: false\n          }\n        });\n      });\n    }\n  }, {\n    key: \"showWallet\",\n    value: function showWallet(path) {\n      var _this10 = this;\n\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var showWalletStream = this.communicationMux.getStream(\"show_wallet\");\n      var finalPath = path ? \"/\".concat(path) : \"\";\n      showWalletStream.write({\n        name: \"show_wallet\",\n        data: {\n          path: finalPath\n        }\n      });\n\n      var showWalletHandler = function showWalletHandler(chunk) {\n        if (chunk.name === \"show_wallet_instance\") {\n          // Let the error propogate up (hence, no try catch)\n          var instanceId = chunk.data.instanceId;\n          var finalUrl = new URL(\"\".concat(_this10.torusUrl, \"/wallet\").concat(finalPath)); // Using URL constructor to prevent js injection and allow parameter validation.!\n\n          finalUrl.searchParams.append(\"integrity\", \"true\");\n          finalUrl.searchParams.append(\"instanceId\", instanceId);\n          Object.keys(params).forEach(function (x) {\n            finalUrl.searchParams.append(x, params[x]);\n          });\n\n          if (_this10.dappStorageKey) {\n            finalUrl.hash = \"#dappStorageKey=\".concat(_this10.dappStorageKey);\n          }\n\n          var walletWindow = new PopupHandler({\n            url: finalUrl,\n            features: FEATURES_DEFAULT_WALLET_WINDOW\n          });\n          walletWindow.open();\n        }\n      };\n\n      handleStream(showWalletStream, \"data\", showWalletHandler);\n    }\n  }, {\n    key: \"getPublicAddress\",\n    value: function () {\n      var _getPublicAddress = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10(_ref2) {\n        var verifier, verifierId, _ref2$isExtended, isExtended, nodeDetails, endpoints, torusNodePubs, walletVerifier, openloginVerifier, existingV1User, v2User, newV2User;\n\n        return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                verifier = _ref2.verifier, verifierId = _ref2.verifierId, _ref2$isExtended = _ref2.isExtended, isExtended = _ref2$isExtended === void 0 ? false : _ref2$isExtended;\n\n                if (!(!configuration.supportedVerifierList.includes(verifier) || !WALLET_OPENLOGIN_VERIFIER_MAP[verifier])) {\n                  _context10.next = 3;\n                  break;\n                }\n\n                throw new Error(\"Unsupported verifier\");\n\n              case 3:\n                _context10.next = 5;\n                return this.nodeDetailManager.getNodeDetails({\n                  verifier: verifier,\n                  verifierId: verifierId\n                });\n\n              case 5:\n                nodeDetails = _context10.sent;\n                endpoints = nodeDetails.torusNodeEndpoints;\n                torusNodePubs = nodeDetails.torusNodePub;\n                walletVerifier = verifier;\n                openloginVerifier = WALLET_OPENLOGIN_VERIFIER_MAP[verifier];\n                _context10.prev = 10;\n                _context10.next = 13;\n                return this.torusJs.getUserTypeAndAddress(endpoints, torusNodePubs, {\n                  verifier: walletVerifier,\n                  verifierId: verifierId\n                });\n\n              case 13:\n                existingV1User = _context10.sent;\n\n                if (!(existingV1User.typeOfUser === \"v1\")) {\n                  _context10.next = 18;\n                  break;\n                }\n\n                if (isExtended) {\n                  _context10.next = 17;\n                  break;\n                }\n\n                return _context10.abrupt(\"return\", existingV1User.address);\n\n              case 17:\n                return _context10.abrupt(\"return\", existingV1User);\n\n              case 18:\n                _context10.next = 20;\n                return this.torusJs.getUserTypeAndAddress(endpoints, torusNodePubs, {\n                  verifier: openloginVerifier,\n                  verifierId: verifierId\n                }, true);\n\n              case 20:\n                v2User = _context10.sent;\n\n                if (isExtended) {\n                  _context10.next = 23;\n                  break;\n                }\n\n                return _context10.abrupt(\"return\", v2User.address);\n\n              case 23:\n                return _context10.abrupt(\"return\", v2User);\n\n              case 26:\n                _context10.prev = 26;\n                _context10.t0 = _context10[\"catch\"](10);\n\n                if (!(_context10.t0 !== null && _context10.t0 !== void 0 && _context10.t0.message.includes(\"Verifier + VerifierID has not yet been assigned\"))) {\n                  _context10.next = 35;\n                  break;\n                }\n\n                _context10.next = 31;\n                return this.torusJs.getUserTypeAndAddress(endpoints, torusNodePubs, {\n                  verifier: openloginVerifier,\n                  verifierId: verifierId\n                }, true);\n\n              case 31:\n                newV2User = _context10.sent;\n\n                if (isExtended) {\n                  _context10.next = 34;\n                  break;\n                }\n\n                return _context10.abrupt(\"return\", newV2User.address);\n\n              case 34:\n                return _context10.abrupt(\"return\", newV2User);\n\n              case 35:\n                throw _context10.t0;\n\n              case 36:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this, [[10, 26]]);\n      }));\n\n      function getPublicAddress(_x6) {\n        return _getPublicAddress.apply(this, arguments);\n      }\n\n      return getPublicAddress;\n    }()\n  }, {\n    key: \"getUserInfo\",\n    value: function getUserInfo(message) {\n      var _this11 = this;\n\n      return new Promise(function (resolve, reject) {\n        if (_this11.isLoggedIn) {\n          var userInfoAccessStream = _this11.communicationMux.getStream(\"user_info_access\");\n\n          userInfoAccessStream.write({\n            name: \"user_info_access_request\"\n          });\n\n          var userInfoAccessHandler = function userInfoAccessHandler(chunk) {\n            var name = chunk.name,\n                _chunk$data2 = chunk.data,\n                approved = _chunk$data2.approved,\n                payload = _chunk$data2.payload,\n                rejected = _chunk$data2.rejected,\n                newRequest = _chunk$data2.newRequest;\n\n            if (name === \"user_info_access_response\") {\n              if (approved) {\n                resolve(payload);\n              } else if (rejected) {\n                reject(new Error(\"User rejected the request\"));\n              } else if (newRequest) {\n                var userInfoStream = _this11.communicationMux.getStream(\"user_info\");\n\n                var userInfoHandler = function userInfoHandler(handlerChunk) {\n                  if (handlerChunk.name === \"user_info_response\") {\n                    if (handlerChunk.data.approved) {\n                      resolve(handlerChunk.data.payload);\n                    } else {\n                      reject(new Error(\"User rejected the request\"));\n                    }\n                  }\n                };\n\n                handleStream(userInfoStream, \"data\", userInfoHandler);\n                var preopenInstanceId = getPreopenInstanceId();\n\n                _this11._handleWindow(preopenInstanceId, {\n                  target: \"_blank\",\n                  features: FEATURES_PROVIDER_CHANGE_WINDOW\n                });\n\n                userInfoStream.write({\n                  name: \"user_info_request\",\n                  data: {\n                    message: message,\n                    preopenInstanceId: preopenInstanceId\n                  }\n                });\n              }\n            }\n          };\n\n          handleStream(userInfoAccessStream, \"data\", userInfoAccessHandler);\n        } else reject(new Error(\"User has not logged in yet\"));\n      });\n    }\n  }, {\n    key: \"initiateTopup\",\n    value: function initiateTopup(provider, params) {\n      var _this12 = this;\n\n      return new Promise(function (resolve, reject) {\n        if (_this12.isInitialized) {\n          var _validatePaymentProvi = validatePaymentProvider(provider, params),\n              errors = _validatePaymentProvi.errors,\n              isValid = _validatePaymentProvi.isValid;\n\n          if (!isValid) {\n            reject(new Error(JSON.stringify(errors)));\n            return;\n          }\n\n          var topupStream = _this12.communicationMux.getStream(\"topup\");\n\n          var topupHandler = function topupHandler(chunk) {\n            if (chunk.name === \"topup_response\") {\n              if (chunk.data.success) {\n                resolve(chunk.data.success);\n              } else {\n                reject(new Error(chunk.data.error));\n              }\n            }\n          };\n\n          handleStream(topupStream, \"data\", topupHandler);\n          var preopenInstanceId = getPreopenInstanceId();\n\n          _this12._handleWindow(preopenInstanceId);\n\n          topupStream.write({\n            name: \"topup_request\",\n            data: {\n              provider: provider,\n              params: params,\n              preopenInstanceId: preopenInstanceId\n            }\n          });\n        } else reject(new Error(\"Torus is not initialized yet\"));\n      });\n    }\n  }, {\n    key: \"loginWithPrivateKey\",\n    value: function () {\n      var _loginWithPrivateKey = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11(loginParams) {\n        var _this13 = this;\n\n        var privateKey, userInfo;\n        return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                privateKey = loginParams.privateKey, userInfo = loginParams.userInfo;\n                return _context11.abrupt(\"return\", new Promise(function (resolve, reject) {\n                  if (_this13.isInitialized) {\n                    if (Buffer.from(privateKey, \"hex\").length !== 32) {\n                      reject(new Error(\"Invalid private key, Please provide a 32 byte valid secp25k1 private key\"));\n                      return;\n                    }\n\n                    var loginPrivKeyStream = _this13.communicationMux.getStream(\"login_with_private_key\");\n\n                    var loginHandler = function loginHandler(chunk) {\n                      if (chunk.name === \"login_with_private_key_response\") {\n                        if (chunk.data.success) {\n                          resolve(chunk.data.success);\n                        } else {\n                          reject(new Error(chunk.data.error));\n                        }\n                      }\n                    };\n\n                    handleStream(loginPrivKeyStream, \"data\", loginHandler);\n                    loginPrivKeyStream.write({\n                      name: \"login_with_private_key_request\",\n                      data: {\n                        privateKey: privateKey,\n                        userInfo: userInfo\n                      }\n                    });\n                  } else reject(new Error(\"Torus is not initialized yet\"));\n                }));\n\n              case 2:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11);\n      }));\n\n      function loginWithPrivateKey(_x7) {\n        return _loginWithPrivateKey.apply(this, arguments);\n      }\n\n      return loginWithPrivateKey;\n    }()\n  }, {\n    key: \"showWalletConnectScanner\",\n    value: function () {\n      var _showWalletConnectScanner = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee12() {\n        var _this14 = this;\n\n        return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                if (this.useWalletConnect) {\n                  _context12.next = 2;\n                  break;\n                }\n\n                throw new Error(\"Set `useWalletConnect` as true in init function options to use wallet connect scanner\");\n\n              case 2:\n                return _context12.abrupt(\"return\", new Promise(function (resolve, reject) {\n                  if (_this14.isLoggedIn) {\n                    var walletConnectStream = _this14.communicationMux.getStream(\"wallet_connect_stream\");\n\n                    var walletConnectHandler = function walletConnectHandler(chunk) {\n                      if (chunk.name === \"wallet_connect_stream_res\") {\n                        if (chunk.data.success) {\n                          resolve(chunk.data.success);\n                        } else {\n                          reject(new Error(chunk.data.error));\n                        }\n\n                        _this14._displayIframe();\n                      }\n                    };\n\n                    handleStream(walletConnectStream, \"data\", walletConnectHandler);\n                    walletConnectStream.write({\n                      name: \"wallet_connect_stream_req\"\n                    });\n\n                    _this14._displayIframe(true);\n                  } else reject(new Error(\"User has not logged in yet\"));\n                }));\n\n              case 3:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, this);\n      }));\n\n      function showWalletConnectScanner() {\n        return _showWalletConnectScanner.apply(this, arguments);\n      }\n\n      return showWalletConnectScanner;\n    }()\n  }, {\n    key: \"_handleWindow\",\n    value: function _handleWindow(preopenInstanceId) {\n      var _ref15 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          url = _ref15.url,\n          target = _ref15.target,\n          features = _ref15.features;\n\n      if (preopenInstanceId) {\n        var windowStream = this.communicationMux.getStream(\"window\");\n        var finalUrl = new URL(url || \"\".concat(this.torusUrl, \"/redirect?preopenInstanceId=\").concat(preopenInstanceId));\n\n        if (this.dappStorageKey) {\n          // If multiple instances, it returns the first one\n          if (finalUrl.hash) finalUrl.hash += \"&dappStorageKey=\".concat(this.dappStorageKey);else finalUrl.hash = \"#dappStorageKey=\".concat(this.dappStorageKey);\n        }\n\n        var handledWindow = new PopupHandler({\n          url: finalUrl,\n          target: target,\n          features: features\n        });\n        handledWindow.open();\n\n        if (!handledWindow.window) {\n          this._createPopupBlockAlert(preopenInstanceId, finalUrl.href);\n\n          return;\n        }\n\n        windowStream.write({\n          name: \"opened_window\",\n          data: {\n            preopenInstanceId: preopenInstanceId\n          }\n        });\n\n        var closeHandler = function closeHandler(_ref3) {\n          var receivedId = _ref3.preopenInstanceId,\n              close = _ref3.close;\n\n          if (receivedId === preopenInstanceId && close) {\n            handledWindow.close();\n            windowStream.removeListener(\"data\", closeHandler);\n          }\n        };\n\n        windowStream.on(\"data\", closeHandler);\n        handledWindow.once(\"close\", function () {\n          windowStream.write({\n            data: {\n              preopenInstanceId: preopenInstanceId,\n              closed: true\n            }\n          });\n          windowStream.removeListener(\"data\", closeHandler);\n        });\n      }\n    }\n  }, {\n    key: \"_setEmbedWhiteLabel\",\n    value: function _setEmbedWhiteLabel(element) {\n      // Set whitelabel\n      var _ref16 = this.whiteLabel || {},\n          theme = _ref16.theme;\n\n      if (theme) {\n        var _theme$isDark = theme.isDark,\n            isDark = _theme$isDark === void 0 ? false : _theme$isDark,\n            _theme$colors = theme.colors,\n            colors = _theme$colors === void 0 ? {} : _theme$colors;\n        if (isDark) element.classList.add(\"torus-dark\");\n        if (colors.torusBrand1) element.style.setProperty(\"--torus-brand-1\", colors.torusBrand1);\n        if (colors.torusGray2) element.style.setProperty(\"--torus-gray-2\", colors.torusGray2);\n      }\n    }\n  }, {\n    key: \"_getLogoUrl\",\n    value: function _getLogoUrl() {\n      var _this$whiteLabel, _this$whiteLabel$them;\n\n      var logoUrl = \"\".concat(this.torusUrl, \"/images/torus_icon-blue.svg\");\n\n      if ((_this$whiteLabel = this.whiteLabel) !== null && _this$whiteLabel !== void 0 && (_this$whiteLabel$them = _this$whiteLabel.theme) !== null && _this$whiteLabel$them !== void 0 && _this$whiteLabel$them.isDark) {\n        var _this$whiteLabel2;\n\n        logoUrl = ((_this$whiteLabel2 = this.whiteLabel) === null || _this$whiteLabel2 === void 0 ? void 0 : _this$whiteLabel2.logoLight) || logoUrl;\n      } else {\n        var _this$whiteLabel3;\n\n        logoUrl = ((_this$whiteLabel3 = this.whiteLabel) === null || _this$whiteLabel3 === void 0 ? void 0 : _this$whiteLabel3.logoDark) || logoUrl;\n      }\n\n      return logoUrl;\n    }\n  }, {\n    key: \"_sendWidgetVisibilityStatus\",\n    value: function _sendWidgetVisibilityStatus(status) {\n      var torusWidgetVisibilityStream = this.communicationMux.getStream(\"torus-widget-visibility\");\n      torusWidgetVisibilityStream.write({\n        data: status\n      });\n    }\n  }, {\n    key: \"_displayIframe\",\n    value: function _displayIframe() {\n      var isFull = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var style = {}; // set phase\n\n      if (!isFull) {\n        style.display = this.torusWidgetVisibility ? \"block\" : \"none\";\n        style.height = \"70px\";\n        style.width = \"70px\";\n\n        switch (this.buttonPosition) {\n          case BUTTON_POSITION.TOP_LEFT:\n            style.top = \"0px\";\n            style.left = \"0px\";\n            style.right = \"auto\";\n            style.bottom = \"auto\";\n            break;\n\n          case BUTTON_POSITION.TOP_RIGHT:\n            style.top = \"0px\";\n            style.right = \"0px\";\n            style.left = \"auto\";\n            style.bottom = \"auto\";\n            break;\n\n          case BUTTON_POSITION.BOTTOM_RIGHT:\n            style.bottom = \"0px\";\n            style.right = \"0px\";\n            style.top = \"auto\";\n            style.left = \"auto\";\n            break;\n\n          case BUTTON_POSITION.BOTTOM_LEFT:\n          default:\n            style.bottom = \"0px\";\n            style.left = \"0px\";\n            style.top = \"auto\";\n            style.right = \"auto\";\n            break;\n        }\n      } else {\n        style.display = \"block\";\n        style.width = \"100%\";\n        style.height = \"100%\";\n        style.top = \"0px\";\n        style.right = \"0px\";\n        style.left = \"0px\";\n        style.bottom = \"0px\";\n      }\n\n      Object.assign(this.torusIframe.style, style);\n      this.isIframeFullScreen = isFull;\n    }\n  }, {\n    key: \"_setupWeb3\",\n    value: function _setupWeb3() {\n      var _this15 = this;\n\n      log.info(\"setupWeb3 running\"); // setup background connection\n\n      var metamaskStream = new BasePostMessageStream({\n        name: \"embed_metamask\",\n        target: \"iframe_metamask\",\n        targetWindow: this.torusIframe.contentWindow,\n        targetOrigin: new URL(this.torusUrl).origin\n      }); // Due to compatibility reasons, we should not set up multiplexing on window.metamaskstream\n      // because the MetamaskInpageProvider also attempts to do so.\n      // We create another LocalMessageDuplexStream for communication between dapp <> iframe\n\n      var communicationStream = new BasePostMessageStream({\n        name: \"embed_comm\",\n        target: \"iframe_comm\",\n        targetWindow: this.torusIframe.contentWindow,\n        targetOrigin: new URL(this.torusUrl).origin\n      }); // Backward compatibility with Gotchi :)\n      // window.metamaskStream = this.communicationStream\n      // compose the inpage provider\n\n      var inpageProvider = new TorusInpageProvider(metamaskStream); // detect eth_requestAccounts and pipe to enable for now\n\n      var detectAccountRequestPrototypeModifier = function detectAccountRequestPrototypeModifier(m) {\n        var originalMethod = inpageProvider[m];\n\n        inpageProvider[m] = function providerFunc(method) {\n          if (method && method === \"eth_requestAccounts\") {\n            return inpageProvider.enable();\n          }\n\n          for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n            args[_key - 1] = arguments[_key];\n          }\n\n          return originalMethod.apply(this, [method].concat(args));\n        };\n      };\n\n      detectAccountRequestPrototypeModifier(\"send\");\n      detectAccountRequestPrototypeModifier(\"sendAsync\");\n\n      inpageProvider.enable = function () {\n        return new Promise(function (resolve, reject) {\n          // If user is already logged in, we assume they have given access to the website\n          inpageProvider.sendAsync({\n            jsonrpc: \"2.0\",\n            id: getPreopenInstanceId(),\n            method: \"eth_requestAccounts\",\n            params: []\n          }, function (err, response) {\n            var _ref17 = response || {},\n                res = _ref17.result;\n\n            if (err) {\n              setTimeout(function () {\n                reject(err);\n              }, 50);\n            } else if (Array.isArray(res) && res.length > 0) {\n              // If user is already rehydrated, resolve this\n              // else wait for something to be written to status stream\n              var handleLoginCb = function handleLoginCb() {\n                if (_this15.requestedVerifier !== \"\" && _this15.currentVerifier !== _this15.requestedVerifier) {\n                  var requestedVerifier = _this15.requestedVerifier; // eslint-disable-next-line promise/no-promise-in-callback\n\n                  _this15.logout() // eslint-disable-next-line promise/always-return\n                  .then(function (_) {\n                    _this15.requestedVerifier = requestedVerifier;\n\n                    _this15._showLoginPopup(true, resolve, reject);\n                  }).catch(function (error) {\n                    return reject(error);\n                  });\n                } else {\n                  resolve(res);\n                }\n              };\n\n              if (_this15.isLoggedIn) {\n                handleLoginCb();\n              } else {\n                _this15.isLoginCallback = handleLoginCb;\n              }\n            } else {\n              // set up listener for login\n              _this15._showLoginPopup(true, resolve, reject);\n            }\n          });\n        });\n      };\n\n      inpageProvider.tryPreopenHandle = function (payload, cb) {\n        var _payload = payload;\n\n        if (!Array.isArray(_payload) && UNSAFE_METHODS.includes(_payload.method)) {\n          var preopenInstanceId = getPreopenInstanceId();\n\n          _this15._handleWindow(preopenInstanceId, {\n            target: \"_blank\",\n            features: FEATURES_CONFIRM_WINDOW\n          });\n\n          _payload.preopenInstanceId = preopenInstanceId;\n        }\n\n        inpageProvider._rpcEngine.handle(_payload, cb);\n      }; // Work around for web3@1.0 deleting the bound `sendAsync` but not the unbound\n      // `sendAsync` method on the prototype, causing `this` reference issues with drizzle\n\n\n      var proxiedInpageProvider = new Proxy(inpageProvider, {\n        // straight up lie that we deleted the property so that it doesnt\n        // throw an error in strict mode\n        deleteProperty: function deleteProperty() {\n          return true;\n        }\n      });\n      this.ethereum = proxiedInpageProvider;\n      var communicationMux = setupMultiplex(communicationStream);\n      this.communicationMux = communicationMux;\n      var windowStream = communicationMux.getStream(\"window\");\n      windowStream.on(\"data\", function (chunk) {\n        if (chunk.name === \"create_window\") {\n          // url is the url we need to open\n          // we can pass the final url upfront so that it removes the step of redirecting to /redirect and waiting for finalUrl\n          _this15._createPopupBlockAlert(chunk.data.preopenInstanceId, chunk.data.url);\n        }\n      }); // show torus widget if button clicked\n\n      var widgetStream = communicationMux.getStream(\"widget\");\n      widgetStream.on(\"data\", function (chunk) {\n        var data = chunk.data;\n\n        _this15._displayIframe(data);\n      }); // Show torus button if wallet has been hydrated/detected\n\n      var statusStream = communicationMux.getStream(\"status\");\n      statusStream.on(\"data\", function (status) {\n        // login\n        if (status.loggedIn) {\n          _this15.isLoggedIn = status.loggedIn;\n          _this15.currentVerifier = status.verifier;\n        } // logout\n        else _this15._displayIframe();\n\n        if (_this15.isLoginCallback) {\n          _this15.isLoginCallback();\n\n          delete _this15.isLoginCallback;\n        }\n      });\n      this.provider = proxiedInpageProvider;\n      if (this.provider.shouldSendMetadata) sendSiteMetadata(this.provider._rpcEngine);\n\n      inpageProvider._initializeState();\n\n      log.debug(\"Torus - injected provider\");\n    }\n  }, {\n    key: \"_showLoginPopup\",\n    value: function _showLoginPopup(calledFromEmbed, resolve, reject) {\n      var _this16 = this;\n\n      var loginHandler = function loginHandler(data) {\n        var err = data.err,\n            selectedAddress = data.selectedAddress;\n\n        if (err) {\n          log.error(err);\n          if (reject) reject(err);\n        } // returns an array (cause accounts expects it)\n        else if (resolve) resolve([selectedAddress]);\n\n        if (_this16.isIframeFullScreen) _this16._displayIframe();\n      };\n\n      var oauthStream = this.communicationMux.getStream(\"oauth\");\n\n      if (!this.requestedVerifier) {\n        this._displayIframe(true);\n\n        handleStream(oauthStream, \"data\", loginHandler);\n        oauthStream.write({\n          name: \"oauth_modal\",\n          data: {\n            calledFromEmbed: calledFromEmbed\n          }\n        });\n      } else {\n        handleStream(oauthStream, \"data\", loginHandler);\n        var preopenInstanceId = getPreopenInstanceId();\n\n        this._handleWindow(preopenInstanceId);\n\n        oauthStream.write({\n          name: \"oauth\",\n          data: {\n            calledFromEmbed: calledFromEmbed,\n            verifier: this.requestedVerifier,\n            preopenInstanceId: preopenInstanceId,\n            login_hint: this.loginHint\n          }\n        });\n      }\n    }\n  }, {\n    key: \"_createPopupBlockAlert\",\n    value: function _createPopupBlockAlert(preopenInstanceId, url) {\n      var _this17 = this;\n\n      var logoUrl = this._getLogoUrl();\n\n      var torusAlert = htmlToElement('<div id=\"torusAlert\" class=\"torus-alert--v2\">' + \"<div id=\\\"torusAlert__logo\\\"><img src=\\\"\".concat(logoUrl, \"\\\" /></div>\") + \"<div>\" + \"<h1 id=\\\"torusAlert__title\\\">\".concat(this.embedTranslations.actionRequired, \"</h1>\") + \"<p id=\\\"torusAlert__desc\\\">\".concat(this.embedTranslations.pendingAction, \"</p>\") + \"</div>\" + \"</div>\");\n      var successAlert = htmlToElement(\"<div><a id=\\\"torusAlert__btn\\\">\".concat(this.embedTranslations.continue, \"</a></div>\"));\n      var btnContainer = htmlToElement('<div id=\"torusAlert__btn-container\"></div>');\n      btnContainer.appendChild(successAlert);\n      torusAlert.appendChild(btnContainer);\n\n      var bindOnLoad = function bindOnLoad() {\n        successAlert.addEventListener(\"click\", function () {\n          _this17._handleWindow(preopenInstanceId, {\n            url: url,\n            target: \"_blank\",\n            features: FEATURES_CONFIRM_WINDOW\n          });\n\n          torusAlert.remove();\n          if (_this17.torusAlertContainer.children.length === 0) _this17.torusAlertContainer.style.display = \"none\";\n        });\n      };\n\n      this._setEmbedWhiteLabel(torusAlert);\n\n      var attachOnLoad = function attachOnLoad() {\n        _this17.torusAlertContainer.style.display = \"block\";\n\n        _this17.torusAlertContainer.appendChild(torusAlert);\n      };\n\n      runOnLoad(attachOnLoad);\n      runOnLoad(bindOnLoad);\n    }\n  }]);\n\n  return Torus;\n}();\n\nexport { BUTTON_POSITION, LOGIN_PROVIDER, PAYMENT_PROVIDER, TORUS_BUILD_ENV, TorusInpageProvider, WALLET_OPENLOGIN_VERIFIER_MAP, Torus as default };","map":{"version":3,"sources":["../src/interfaces.ts","../src/config.ts","../src/embedUtils.ts","../src/loglevel.ts","../src/messages.ts","../src/utils.ts","../src/inpage-provider.ts","../src/integrity.ts","../src/PopupHandler.ts","../src/siteMetadata.ts","../src/embed.ts"],"names":["LOGIN_PROVIDER","GOOGLE","FACEBOOK","TWITCH","REDDIT","DISCORD","WALLET_OPENLOGIN_VERIFIER_MAP","PAYMENT_PROVIDER","MOONPAY","WYRE","RAMPNETWORK","XANPOOL","MERCURYO","TRANSAK","TORUS_BUILD_ENV","PRODUCTION","DEVELOPMENT","BINANCE","TESTING","LRC","BETA","BUTTON_POSITION","BOTTOM_LEFT","TOP_LEFT","BOTTOM_RIGHT","TOP_RIGHT","paymentProviders","line1","line2","line3","supportPage","minOrderValue","maxOrderValue","validCurrencies","validCryptoCurrencies","includeFees","enforceMax","sell","translations","en","embed","continue","actionRequired","pendingAction","cookiesRequired","enableCookies","clickHere","de","ja","ko","zh","supportedVerifierList","api","prodTorusUrl","localStorageKeyPrefix","runOnLoad","fn","window","Promise","htmlToElement","html","template","trimmedHtml","handleEvent","handlerArgs","handlerWrapper","handler","handle","handleStream","chunk","resolve","document","loglevel","errors","disconnected","permanentlyDisconnected","sendSiteMetadata","unsupportedSync","method","invalidDuplexStream","invalidOptions","maxEventListeners","shouldSendMetadata","invalidRequestArgs","invalidRequestMethod","invalidRequestParams","invalidLoggerObject","invalidLoggerMethod","info","connected","chainId","warnings","enableDeprecation","sendDeprecation","events","close","data","networkChanged","notification","publicConfigStore","validatePaymentProvider","isValid","provider","Object","selectedProvider","selectedParams","params","requestedOrderAmount","parseFloat","createErrorMiddleware","req","res","message","next","done","error","log","logStreamDisconnectWarning","remoteLabel","emitter","warningMsg","getPreopenInstanceId","Math","getTorusUrl","version","versionUsed","integrity","buildEnv","config","get","useAPIKey","response","torusUrl","logLevel","getUserLanguage","userLanguage","userLanguages","EMITTED_NOTIFICATIONS","NOOP","FEATURES_PROVIDER_CHANGE_WINDOW","FEATURES_DEFAULT_WALLET_WINDOW","FEATURES_CONFIRM_WINDOW","storage","x","e","getPopupFeatures","dualScreenLeft","dualScreenTop","w","h","width","height","systemZoom","left","top","features","SafeEventEmitter","getRpcPromiseCallback","unwrapResult","reject","Array","TorusInpageProvider","accounts","isConnected","isUnlocked","initialized","isPermanentlyDisconnected","hasEmittedConnection","enable","experimentalMethods","send","constructor","jsonRpcStreamName","isDuplexStream","messages","isTorus","selectedAddress","networkVersion","_handleAccountsChanged","_handleChainChanged","_handleUnlockStateChanged","_handleConnect","_handleDisconnect","_handleStreamDisconnect","_sendSync","_rpcRequest","_warnOfDeprecation","_initializeState","request","sendAsync","mux","pump","storageKey","storeAsStream","jsonRpcConnection","createStreamMiddleware","rpcEngine","createIdRemapMiddleware","payload","emit","type","args","addListener","on","once","prependListener","prependOnceListener","isInternal","cb","_payload","callback","callbackOrArgs","methodOrPayload","result","id","jsonrpc","errorMessage","isEthAccounts","finalAccounts","dequal","defaults","options","algorithms","delimiter","full","hashes","internalHashes","algorithm","createHash","output","sri","main","finalOptions","undefined","url","target","windowTimer","iClosedWindow","_setupTimer","Number","setInterval","clearInterval","open","redirect","img","getSiteName","siteName","metaTitle","icon","imgExists","_icon","Boolean","getSiteMetadata","name","getSiteIcon","domainMetadata","engine","originalError","defaultVerifiers","iframeIntegrity","expectedCacheControlHeader","UNSAFE_METHODS","isLocalStorageAvailable","storageAvailable","torusIframeHtml","check","hash","configuration","buttonPosition","modalZIndex","apiKey","torusWidgetVisibility","requestedVerifier","currentVerifier","metadataHost","allowHost","TorusJs","setAPIKey","isIframeFullScreen","dappStorageKey","init","enableLogging","enabledVerifiers","network","host","networkName","blockExplorer","ticker","tickerName","loginConfig","showTorusButton","skipTKey","useLocalStorage","useWalletConnect","whiteLabel","localStorageKey","storedKey","generatedKey","torusIframeUrl","link","styleLink","defaultLanguage","customTranslations","mergedTranslations","deepmerge","languageTranslations","handleSetup","documentReady","initStream","communicationMux","isInitialized","_displayIframe","fetchUrl","resp","fetch","cache","calculatedIntegrity","generateIntegrity","login","verifier","login_hint","loginHint","logout","isLoggedIn","logOutStream","statusStream","statusStreamHandler","status","cleanUp","clearInit","isElement","element","torusIframe","torusAlert","torusAlertContainer","hideTorusButton","_sendWidgetVisibilityStatus","setProvider","rest","providerChangeStream","success","preopenInstanceId","_handleWindow","override","showWallet","showWalletStream","finalPath","path","showWalletHandler","instanceId","finalUrl","walletWindow","getPublicAddress","isExtended","nodeDetails","verifierId","endpoints","torusNodePubs","walletVerifier","openloginVerifier","existingV1User","v2User","newV2User","getUserInfo","userInfoAccessStream","userInfoAccessHandler","newRequest","userInfoStream","userInfoHandler","handlerChunk","initiateTopup","JSON","topupStream","topupHandler","loginWithPrivateKey","userInfo","Buffer","loginPrivKeyStream","loginHandler","privateKey","showWalletConnectScanner","walletConnectStream","walletConnectHandler","windowStream","handledWindow","closeHandler","receivedId","closed","_setEmbedWhiteLabel","theme","isDark","colors","_getLogoUrl","logoUrl","logoLight","logoDark","torusWidgetVisibilityStream","isFull","style","_setupWeb3","metamaskStream","targetWindow","targetOrigin","origin","communicationStream","inpageProvider","detectAccountRequestPrototypeModifier","m","originalMethod","setTimeout","handleLoginCb","_","isLoginCallback","proxiedInpageProvider","deleteProperty","ethereum","setupMultiplex","widgetStream","_showLoginPopup","oauthStream","calledFromEmbed","_createPopupBlockAlert","successAlert","btnContainer","bindOnLoad","attachOnLoad"],"mappings":"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","sourcesContent":["import _objectWithoutProperties from '@babel/runtime/helpers/objectWithoutProperties';\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport NodeDetailManager from '@toruslabs/fetch-node-details';\nimport { get, setAPIKey } from '@toruslabs/http-helpers';\nimport { SafeEventEmitter, ObjectMultiplex, createStreamMiddleware, JRPCEngine, createIdRemapMiddleware, BasePostMessageStream, setupMultiplex } from '@toruslabs/openlogin-jrpc';\nimport TorusJs from '@toruslabs/torus.js';\nimport deepmerge from 'lodash.merge';\nimport { ObservableStore, storeAsStream } from '@metamask/obs-store';\nimport { ethErrors, EthereumRpcError } from 'eth-rpc-errors';\nimport dequal from 'fast-deep-equal';\nimport { duplex } from 'is-stream';\nimport pump from 'pump';\nimport loglevel from 'loglevel';\nimport createHash from 'create-hash';\nimport { EventEmitter } from 'events';\n\nconst LOGIN_PROVIDER = {\n  GOOGLE: \"google\",\n  FACEBOOK: \"facebook\",\n  TWITCH: \"twitch\",\n  REDDIT: \"reddit\",\n  DISCORD: \"discord\"\n};\nconst WALLET_OPENLOGIN_VERIFIER_MAP = {\n  [LOGIN_PROVIDER.GOOGLE]: \"tkey-google\",\n  [LOGIN_PROVIDER.FACEBOOK]: \"tkey-facebook\",\n  [LOGIN_PROVIDER.TWITCH]: \"tkey-twitch\",\n  [LOGIN_PROVIDER.REDDIT]: \"tkey-reddit\",\n  [LOGIN_PROVIDER.DISCORD]: \"tkey-discord\"\n};\nconst PAYMENT_PROVIDER = {\n  MOONPAY: \"moonpay\",\n  WYRE: \"wyre\",\n  RAMPNETWORK: \"rampnetwork\",\n  XANPOOL: \"xanpool\",\n  MERCURYO: \"mercuryo\",\n  TRANSAK: \"transak\"\n};\nconst TORUS_BUILD_ENV = {\n  PRODUCTION: \"production\",\n  DEVELOPMENT: \"development\",\n  BINANCE: \"binance\",\n  TESTING: \"testing\",\n  LRC: \"lrc\",\n  BETA: \"beta\"\n};\nconst BUTTON_POSITION = {\n  BOTTOM_LEFT: \"bottom-left\",\n  TOP_LEFT: \"top-left\",\n  BOTTOM_RIGHT: \"bottom-right\",\n  TOP_RIGHT: \"top-right\"\n};\n\nconst paymentProviders$1 = {\n  [PAYMENT_PROVIDER.RAMPNETWORK]: {\n    line1: \"Debit Card/ Apple Pay/ Bank transfer\",\n    line2: \"0.49% - 2.9%\",\n    line3: \"5,000€/purchase, 20,000€/mo\",\n    supportPage: \"https://instant.ramp.network/\",\n    minOrderValue: 50,\n    maxOrderValue: 20000,\n    validCurrencies: [\"GBP\", \"EUR\", \"USD\"],\n    validCryptoCurrencies: [\"ETH\", \"DAI\", \"USDC\", \"BSC_BNB\"],\n    includeFees: true,\n    enforceMax: false\n  },\n  [PAYMENT_PROVIDER.MOONPAY]: {\n    line1: \"Credit / Debit Card / Apple Pay\",\n    line2: \"4.5% or 5 USD\",\n    line3: \"2,000€/day, 10,000€/mo\",\n    supportPage: \"https://help.moonpay.io/en/\",\n    minOrderValue: 24.99,\n    maxOrderValue: 50000,\n    validCurrencies: [\"USD\", \"EUR\", \"GBP\", \"AUD\", \"CAD\", \"SGD\", \"RUB\"],\n    validCryptoCurrencies: [\"ETH\", \"DAI\", \"TUSD\", \"USDC\", \"USDT\", \"BNB_BSC\", \"BUSD_BSC\"],\n    includeFees: true,\n    enforceMax: false\n  },\n  [PAYMENT_PROVIDER.WYRE]: {\n    line1: \"Apple Pay/ Debit/ Credit Card\",\n    line2: \"4.9% + 30¢ or 5 USD\",\n    line3: \"$250/day\",\n    supportPage: \"https://support.sendwyre.com/en/\",\n    minOrderValue: 5,\n    maxOrderValue: 500,\n    validCurrencies: [\"USD\", \"AUD\", \"CAD\", \"GBP\", \"EUR\"],\n    validCryptoCurrencies: [\"ETH\", \"DAI\", \"USDC\", \"USDT\"],\n    includeFees: false,\n    enforceMax: false\n  },\n  [PAYMENT_PROVIDER.XANPOOL]: {\n    line1: \"PayNow/ InstaPay/ FPS/ GoJekPay/ UPI/ PromptPay/ VietelPay/ DuitNow\",\n    line2: \"2.5% buying, 3% selling\",\n    line3: \"$2,500 / day\",\n    supportPage: \"mailto:support@xanpool.com\",\n    minOrderValue: 100,\n    maxOrderValue: 2500,\n    validCurrencies: [\"SGD\", \"HKD\", \"MYR\", \"PHP\", \"INR\", \"VND\", \"THB\", \"IDR\"],\n    validCryptoCurrencies: [\"ETH\", \"USDT\"],\n    includeFees: true,\n    sell: true,\n    enforceMax: false\n  },\n  [PAYMENT_PROVIDER.MERCURYO]: {\n    line1: \"Credit/ Debit Card/ Apple Pay\",\n    line2: \"3.95% or 4 USD\",\n    line3: \"10,000€/day, 25,000€/mo\",\n    supportPage: \"mailto:support@mercuryo.io\",\n    minOrderValue: 30,\n    maxOrderValue: 5000,\n    validCurrencies: [\"USD\", \"EUR\", \"RUB\", \"TRY\", \"GBP\", \"UAH\"],\n    validCryptoCurrencies: [\"ETH\", \"DAI\", \"BAT\", \"USDT\", \"OKB\"],\n    includeFees: true,\n    enforceMax: false\n  },\n  [PAYMENT_PROVIDER.TRANSAK]: {\n    line1: \"Credit/ Debit Card/ <br/>Bank Transfer (sepa/gbp)\",\n    line2: \"0.99% - 5.5% or 5 USD\",\n    line3: \"500€/day\",\n    supportPage: \"https://support.transak.com/hc/en-US\",\n    minOrderValue: 20,\n    maxOrderValue: 500,\n    validCurrencies: [\"USD\", \"EUR\", \"GBP\", \"AUD\", \"CAD\", \"SGD\"],\n    validCryptoCurrencies: [\"ETH\", \"DAI\", \"USDC\", \"USDT\"],\n    includeFees: true,\n    enforceMax: false\n  }\n};\nconst translations = {\n  en: {\n    embed: {\n      continue: \"Continue\",\n      actionRequired: \"Authorization required\",\n      pendingAction: \"Click continue to proceed with your request in a popup\",\n      cookiesRequired: \"Cookies Required\",\n      enableCookies: \"Please enable cookies in your browser preferences to access Torus\",\n      clickHere: \"More Info\"\n    }\n  },\n  de: {\n    embed: {\n      continue: \"Fortsetzen\",\n      actionRequired: \"Autorisierung erforderlich\",\n      pendingAction: \"Klicken Sie in einem Popup auf Weiter, um mit Ihrer Anfrage fortzufahren\",\n      cookiesRequired: \"Cookies benötigt\",\n      enableCookies: \"Bitte aktivieren Sie Cookies in Ihren Browsereinstellungen, um auf Torus zuzugreifen\",\n      clickHere: \"Mehr Info\"\n    }\n  },\n  ja: {\n    embed: {\n      continue: \"継続する\",\n      actionRequired: \"認証が必要です\",\n      pendingAction: \"続行をクリックして、ポップアップでリクエストを続行します\",\n      cookiesRequired: \"必要なクッキー\",\n      enableCookies: \"Torusにアクセスするには、ブラウザの設定でCookieを有効にしてください。\",\n      clickHere: \"詳しくは\"\n    }\n  },\n  ko: {\n    embed: {\n      continue: \"계속하다\",\n      actionRequired: \"승인 필요\",\n      pendingAction: \"팝업에서 요청을 진행하려면 계속을 클릭하십시오.\",\n      cookiesRequired: \"쿠키 필요\",\n      enableCookies: \"브라우저 환경 설정에서 쿠키를 활성화하여 Torus에 액세스하십시오.\",\n      clickHere: \"더 많은 정보\"\n    }\n  },\n  zh: {\n    embed: {\n      continue: \"继续\",\n      actionRequired: \"需要授权\",\n      pendingAction: \"单击继续以在弹出窗口中继续您的请求\",\n      cookiesRequired: \"必填Cookie\",\n      enableCookies: \"请在您的浏览器首选项中启用cookie以访问Torus。\",\n      clickHere: \"更多信息\"\n    }\n  }\n};\nvar configuration = {\n  supportedVerifierList: [LOGIN_PROVIDER.GOOGLE, LOGIN_PROVIDER.REDDIT, LOGIN_PROVIDER.DISCORD],\n  paymentProviders: paymentProviders$1,\n  api: \"https://api.tor.us\",\n  translations,\n  prodTorusUrl: \"\",\n  localStorageKeyPrefix: \"torus-\"\n};\n\nconst runOnLoad = fn => new Promise((resolve, reject) => {\n  if (window.document.body != null) {\n    Promise.resolve(fn()).then(resolve).catch(reject);\n  } else {\n    window.document.addEventListener(\"DOMContentLoaded\", () => {\n      Promise.resolve(fn()).then(resolve).catch(reject);\n    });\n  }\n});\nconst htmlToElement = html => {\n  const template = window.document.createElement(\"template\");\n  const trimmedHtml = html.trim(); // Never return a text node of whitespace as the result\n\n  template.innerHTML = trimmedHtml;\n  return template.content.firstChild;\n};\nconst handleEvent = function (handle, eventName, handler) {\n  for (var _len = arguments.length, handlerArgs = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n    handlerArgs[_key - 3] = arguments[_key];\n  }\n\n  const handlerWrapper = () => {\n    handler(...handlerArgs);\n    handle.removeEventListener(eventName, handlerWrapper);\n  };\n\n  handle.addEventListener(eventName, handlerWrapper);\n};\nconst handleStream = (handle, eventName, handler) => {\n  const handlerWrapper = chunk => {\n    handler(chunk);\n    handle.removeListener(eventName, handlerWrapper);\n  };\n\n  handle.on(eventName, handlerWrapper);\n};\nasync function documentReady() {\n  return new Promise(resolve => {\n    if (document.readyState !== \"loading\") {\n      resolve();\n    } else {\n      handleEvent(document, \"DOMContentLoaded\", resolve);\n    }\n  });\n}\n\nvar log = loglevel.getLogger(\"torus-embed\");\n\nvar messages = {\n  errors: {\n    disconnected: () => \"Torus: Lost connection to Torus.\",\n    permanentlyDisconnected: () => \"Torus: Disconnected from iframe. Page reload required.\",\n    sendSiteMetadata: () => \"Torus: Failed to send site metadata. This is an internal error, please report this bug.\",\n    unsupportedSync: method => \"Torus: The Torus Ethereum provider does not support synchronous methods like \".concat(method, \" without a callback parameter.\"),\n    invalidDuplexStream: () => \"Must provide a Node.js-style duplex stream.\",\n    invalidOptions: (maxEventListeners, shouldSendMetadata) => \"Invalid options. Received: { maxEventListeners: \".concat(maxEventListeners, \", shouldSendMetadata: \").concat(shouldSendMetadata, \" }\"),\n    invalidRequestArgs: () => \"Expected a single, non-array, object argument.\",\n    invalidRequestMethod: () => \"'args.method' must be a non-empty string.\",\n    invalidRequestParams: () => \"'args.params' must be an object or array if provided.\",\n    invalidLoggerObject: () => \"'args.logger' must be an object if provided.\",\n    invalidLoggerMethod: method => \"'args.logger' must include required method '\".concat(method, \"'.\")\n  },\n  info: {\n    connected: chainId => \"Torus: Connected to chain with ID \\\"\".concat(chainId, \"\\\".\")\n  },\n  warnings: {\n    // deprecated methods\n    enableDeprecation: 'Torus: \"\"ethereum.enable()\" is deprecated and may be removed in the future. ' + 'Please use \"ethereum.send(\"eth_requestAccounts\")\" instead. For more information, see: https://eips.ethereum.org/EIPS/eip-1102',\n    sendDeprecation: 'Torus: \"ethereum.send(...)\" is deprecated and may be removed in the future.' + ' Please use \"ethereum.sendAsync(...)\" or \"ethereum.request(...)\" instead.\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193',\n    events: {\n      close: 'Torus: The event \"close\" is deprecated and may be removed in the future. Please use \"disconnect\" instead.' + \"\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193\",\n      data: 'Torus: The event \"data\" is deprecated and will be removed in the future.' + 'Use \"message\" instead.\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193#message',\n      networkChanged: 'Torus: The event \"networkChanged\" is deprecated and may be removed in the future.' + ' Please use \"chainChanged\" instead.\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193',\n      notification: 'Torus: The event \"notification\" is deprecated and may be removed in the future. ' + 'Please use \"message\" instead.\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193'\n    },\n    publicConfigStore: 'Torus: The property \"publicConfigStore\" is deprecated and WILL be removed in the future.'\n  }\n};\n\nconst {\n  paymentProviders\n} = configuration;\nconst validatePaymentProvider = (provider, params) => {\n  const errors = {};\n\n  if (!provider) {\n    return {\n      errors,\n      isValid: true\n    };\n  }\n\n  if (provider && !paymentProviders[provider]) {\n    errors.provider = \"Invalid Provider\";\n    return {\n      errors,\n      isValid: Object.keys(errors).length === 0\n    };\n  }\n\n  const selectedProvider = paymentProviders[provider];\n  const selectedParams = params || {}; // set default values\n  // if (!selectedParams.selectedCurrency) [selectedParams.selectedCurrency] = selectedProvider.validCurrencies\n  // if (!selectedParams.fiatValue) selectedParams.fiatValue = selectedProvider.minOrderValue\n  // if (!selectedParams.selectedCryptoCurrency) [selectedParams.selectedCryptoCurrency] = selectedProvider.validCryptoCurrencies\n  // validations\n\n  if (selectedParams.fiatValue) {\n    const requestedOrderAmount = +parseFloat(selectedParams.fiatValue.toString()) || 0;\n    if (requestedOrderAmount < selectedProvider.minOrderValue) errors.fiatValue = \"Requested amount is lower than supported\";\n    if (requestedOrderAmount > selectedProvider.maxOrderValue && selectedProvider.enforceMax) errors.fiatValue = \"Requested amount is higher than supported\";\n  }\n\n  if (selectedParams.selectedCurrency && !selectedProvider.validCurrencies.includes(selectedParams.selectedCurrency)) {\n    errors.selectedCurrency = \"Unsupported currency\";\n  }\n\n  if (selectedParams.selectedCryptoCurrency && !selectedProvider.validCryptoCurrencies.includes(selectedParams.selectedCryptoCurrency)) {\n    errors.selectedCryptoCurrency = \"Unsupported cryptoCurrency\";\n  }\n\n  return {\n    errors,\n    isValid: Object.keys(errors).length === 0\n  };\n}; // utility functions\n\n/**\n * json-rpc-engine middleware that logs RPC errors and and validates req.method.\n *\n * @param log - The logging API to use.\n * @returns  json-rpc-engine middleware function\n */\n\nfunction createErrorMiddleware() {\n  return (req, res, next) => {\n    // json-rpc-engine will terminate the request when it notices this error\n    if (typeof req.method !== \"string\" || !req.method) {\n      res.error = ethErrors.rpc.invalidRequest({\n        message: \"The request 'method' must be a non-empty string.\",\n        data: req\n      });\n    }\n\n    next(done => {\n      const {\n        error\n      } = res;\n\n      if (!error) {\n        return done();\n      }\n\n      log.error(\"MetaMask - RPC Error: \".concat(error.message), error);\n      return done();\n    });\n  };\n} // resolve response.result or response, reject errors\n/**\n * Logs a stream disconnection error. Emits an 'error' if given an\n * EventEmitter that has listeners for the 'error' event.\n *\n * @param log - The logging API to use.\n * @param remoteLabel - The label of the disconnected stream.\n * @param error - The associated error to log.\n * @param emitter - The logging API to use.\n */\n\nfunction logStreamDisconnectWarning(remoteLabel, error, emitter) {\n  let warningMsg = \"MetaMask: Lost connection to \\\"\".concat(remoteLabel, \"\\\".\");\n\n  if (error !== null && error !== void 0 && error.stack) {\n    warningMsg += \"\\n\".concat(error.stack);\n  }\n\n  log.warn(warningMsg);\n\n  if (emitter && emitter.listenerCount(\"error\") > 0) {\n    emitter.emit(\"error\", warningMsg);\n  }\n}\nconst getPreopenInstanceId = () => Math.random().toString(36).slice(2);\nconst getTorusUrl = async (buildEnv, integrity) => {\n  let torusUrl;\n  let logLevel; // Do not change this line\n\n  const version = \"1.22.6\";\n  let versionUsed = integrity.version || version;\n\n  try {\n    if ((buildEnv === \"binance\" || buildEnv === \"production\") && !integrity.version) {\n      let response;\n      if (!configuration.prodTorusUrl) response = await get(\"\".concat(configuration.api, \"/latestversion?name=@toruslabs/torus-embed&version=\").concat(version), {}, {\n        useAPIKey: true\n      });else response = {\n        data: configuration.prodTorusUrl\n      };\n      versionUsed = response.data; // eslint-disable-next-line require-atomic-updates\n\n      configuration.prodTorusUrl = response.data;\n    }\n  } catch (error) {\n    log.error(error, \"unable to fetch latest version\");\n  }\n\n  log.info(\"version used: \", versionUsed);\n\n  switch (buildEnv) {\n    case \"binance\":\n      torusUrl = \"https://binance.tor.us/v\".concat(versionUsed);\n      logLevel = \"info\";\n      break;\n\n    case \"testing\":\n      torusUrl = \"https://testing.tor.us\";\n      logLevel = \"debug\";\n      break;\n\n    case \"lrc\":\n      torusUrl = \"https://lrc.tor.us\";\n      logLevel = \"debug\";\n      break;\n\n    case \"beta\":\n      torusUrl = \"https://beta.tor.us\";\n      logLevel = \"debug\";\n      break;\n\n    case \"development\":\n      torusUrl = \"http://localhost:4050\";\n      logLevel = \"debug\";\n      break;\n\n    default:\n      torusUrl = \"https://app.tor.us/v\".concat(versionUsed);\n      logLevel = \"error\";\n      break;\n  }\n\n  return {\n    torusUrl,\n    logLevel\n  };\n};\nconst getUserLanguage = () => {\n  let userLanguage = window.navigator.language || \"en-US\";\n  const userLanguages = userLanguage.split(\"-\");\n  userLanguage = Object.prototype.hasOwnProperty.call(configuration.translations, userLanguages[0]) ? userLanguages[0] : \"en\";\n  return userLanguage;\n};\nconst EMITTED_NOTIFICATIONS = [\"eth_subscription\" // per eth-json-rpc-filters/subscriptionManager\n];\nconst NOOP = () => {// empty function\n};\nconst FEATURES_PROVIDER_CHANGE_WINDOW = \"directories=0,titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=660,width=375\";\nconst FEATURES_DEFAULT_WALLET_WINDOW = \"directories=0,titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=740,width=1315\";\nconst FEATURES_CONFIRM_WINDOW = \"directories=0,titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=700,width=450\";\nfunction storageAvailable(type) {\n  let storage;\n\n  try {\n    storage = window[type];\n    const x = \"__storage_test__\";\n    storage.setItem(x, x);\n    storage.removeItem(x);\n    return true;\n  } catch (e) {\n    return e && ( // everything except Firefox\n    e.code === 22 || // Firefox\n    e.code === 1014 || // test name field too, because code might not be present\n    // everything except Firefox\n    e.name === \"QuotaExceededError\" || // Firefox\n    e.name === \"NS_ERROR_DOM_QUOTA_REACHED\") && // acknowledge QuotaExceededError only if there's something already stored\n    storage && storage.length !== 0;\n  }\n}\nfunction getPopupFeatures() {\n  // Fixes dual-screen position                             Most browsers      Firefox\n  const dualScreenLeft = window.screenLeft !== undefined ? window.screenLeft : window.screenX;\n  const dualScreenTop = window.screenTop !== undefined ? window.screenTop : window.screenY;\n  const w = 1200;\n  const h = 700;\n  const width = window.innerWidth ? window.innerWidth : document.documentElement.clientWidth ? document.documentElement.clientWidth : window.screen.width;\n  const height = window.innerHeight ? window.innerHeight : document.documentElement.clientHeight ? document.documentElement.clientHeight : window.screen.height;\n  const systemZoom = 1; // No reliable estimate\n\n  const left = Math.abs((width - w) / 2 / systemZoom + dualScreenLeft);\n  const top = Math.abs((height - h) / 2 / systemZoom + dualScreenTop);\n  const features = \"titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=\".concat(h / systemZoom, \",width=\").concat(w / systemZoom, \",top=\").concat(top, \",left=\").concat(left);\n  return features;\n}\n\nfunction ownKeys$1(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread$1(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$1(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$1(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nSafeEventEmitter.defaultMaxListeners = 100; // resolve response.result, reject errors\n\nconst getRpcPromiseCallback = function (resolve, reject) {\n  let unwrapResult = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  return (error, response) => {\n    if (error || response.error) {\n      return reject(error || response.error);\n    }\n\n    return !unwrapResult || Array.isArray(response) ? resolve(response) : resolve(response.result);\n  };\n};\n\nclass TorusInpageProvider extends SafeEventEmitter {\n  /**\n   * The chain ID of the currently connected Ethereum chain.\n   * See [chainId.network]{@link https://chainid.network} for more information.\n   */\n\n  /**\n   * The user's currently selected Ethereum address.\n   * If null, MetaMask is either locked or the user has not permitted any\n   * addresses to be viewed.\n   */\n\n  /**\n   * Indicating that this provider is a MetaMask provider.\n   */\n  constructor(connectionStream) {\n    let {\n      maxEventListeners = 100,\n      shouldSendMetadata = true,\n      jsonRpcStreamName = \"provider\"\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    super();\n\n    _defineProperty(this, \"chainId\", void 0);\n\n    _defineProperty(this, \"selectedAddress\", void 0);\n\n    _defineProperty(this, \"_rpcEngine\", void 0);\n\n    _defineProperty(this, \"networkVersion\", void 0);\n\n    _defineProperty(this, \"shouldSendMetadata\", void 0);\n\n    _defineProperty(this, \"isTorus\", void 0);\n\n    _defineProperty(this, \"_publicConfigStore\", void 0);\n\n    _defineProperty(this, \"tryPreopenHandle\", void 0);\n\n    _defineProperty(this, \"enable\", void 0);\n\n    _defineProperty(this, \"_state\", void 0);\n\n    _defineProperty(this, \"_jsonRpcConnection\", void 0);\n\n    _defineProperty(this, \"_sentWarnings\", {\n      // methods\n      enable: false,\n      experimentalMethods: false,\n      send: false,\n      publicConfigStore: false,\n      // events\n      events: {\n        close: false,\n        data: false,\n        networkChanged: false,\n        notification: false\n      }\n    });\n\n    if (!duplex(connectionStream)) {\n      throw new Error(messages.errors.invalidDuplexStream());\n    }\n\n    this.isTorus = true;\n    this.setMaxListeners(maxEventListeners); // private state\n\n    this._state = _objectSpread$1({}, TorusInpageProvider._defaultState); // public state\n\n    this.selectedAddress = null;\n    this.networkVersion = null;\n    this.chainId = null;\n    this.shouldSendMetadata = shouldSendMetadata; // bind functions (to prevent e.g. web3@1.x from making unbound calls)\n\n    this._handleAccountsChanged = this._handleAccountsChanged.bind(this);\n    this._handleChainChanged = this._handleChainChanged.bind(this);\n    this._handleUnlockStateChanged = this._handleUnlockStateChanged.bind(this);\n    this._handleConnect = this._handleConnect.bind(this);\n    this._handleDisconnect = this._handleDisconnect.bind(this);\n    this._handleStreamDisconnect = this._handleStreamDisconnect.bind(this);\n    this._sendSync = this._sendSync.bind(this);\n    this._rpcRequest = this._rpcRequest.bind(this);\n    this._warnOfDeprecation = this._warnOfDeprecation.bind(this);\n    this._initializeState = this._initializeState.bind(this);\n    this.request = this.request.bind(this);\n    this.send = this.send.bind(this);\n    this.sendAsync = this.sendAsync.bind(this); // this.enable = this.enable.bind(this);\n    // setup connectionStream multiplexing\n\n    const mux = new ObjectMultiplex();\n    pump(connectionStream, mux, connectionStream, this._handleStreamDisconnect.bind(this, \"MetaMask\")); // subscribe to metamask public config (one-way)\n\n    this._publicConfigStore = new ObservableStore({\n      storageKey: \"Metamask-Config\"\n    }); // handle isUnlocked changes, and chainChanged and networkChanged events\n    // this._publicConfigStore.subscribe((stringifiedState) => {\n    //   // This is because we are using store as string\n    //   const state = JSON.parse(stringifiedState as unknown as string);\n    //   if (\"isUnlocked\" in state && state.isUnlocked !== this._state.isUnlocked) {\n    //     this._state.isUnlocked = state.isUnlocked;\n    //     if (!this._state.isUnlocked) {\n    //       // accounts are never exposed when the extension is locked\n    //       this._handleAccountsChanged([]);\n    //     } else {\n    //       // this will get the exposed accounts, if any\n    //       try {\n    //         this._rpcRequest(\n    //           { method: \"eth_accounts\", params: [] },\n    //           NOOP,\n    //           true // indicating that eth_accounts _should_ update accounts\n    //         );\n    //       } catch (_) {\n    //         // Swallow error\n    //       }\n    //     }\n    //   }\n    //   if (\"selectedAddress\" in state && this.selectedAddress !== state.selectedAddress) {\n    //     try {\n    //       this._rpcRequest(\n    //         { method: \"eth_accounts\", params: [] },\n    //         NOOP,\n    //         true // indicating that eth_accounts _should_ update accounts\n    //       );\n    //     } catch (_) {\n    //       // Swallow error\n    //     }\n    //   }\n    //   // Emit chainChanged event on chain change\n    //   if (\"chainId\" in state && state.chainId !== this.chainId) {\n    //     this.chainId = state.chainId || null;\n    //     this.emit(\"chainChanged\", this.chainId);\n    //     // indicate that we've connected, for EIP-1193 compliance\n    //     // we do this here so that iframe can initialize\n    //     if (!this._state.hasEmittedConnection) {\n    //       this._handleConnect(this.chainId);\n    //       this._state.hasEmittedConnection = true;\n    //     }\n    //   }\n    //   // Emit networkChanged event on network change\n    //   if (\"networkVersion\" in state && state.networkVersion !== this.networkVersion) {\n    //     this.networkVersion = state.networkVersion || null;\n    //     this.emit(\"networkChanged\", this.networkVersion);\n    //   }\n    // });\n\n    pump(mux.createStream(\"publicConfig\"), storeAsStream(this._publicConfigStore), // RPC requests should still work if only this stream fails\n    logStreamDisconnectWarning.bind(this, \"MetaMask PublicConfigStore\")); // ignore phishing warning message (handled elsewhere)\n\n    mux.ignoreStream(\"phishing\"); // setup own event listeners\n    // EIP-1193 connect\n\n    this.on(\"connect\", () => {\n      this._state.isConnected = true;\n    }); // connect to async provider\n\n    const jsonRpcConnection = createStreamMiddleware();\n    pump(jsonRpcConnection.stream, mux.createStream(jsonRpcStreamName), jsonRpcConnection.stream, this._handleStreamDisconnect.bind(this, \"MetaMask RpcProvider\")); // handle RPC requests via dapp-side rpc engine\n\n    const rpcEngine = new JRPCEngine();\n    rpcEngine.push(createIdRemapMiddleware());\n    rpcEngine.push(createErrorMiddleware());\n    rpcEngine.push(jsonRpcConnection.middleware);\n    this._rpcEngine = rpcEngine; // json rpc notification listener\n\n    jsonRpcConnection.events.on(\"notification\", payload => {\n      const {\n        method,\n        params\n      } = payload;\n\n      if (method === \"wallet_accountsChanged\") {\n        this._handleAccountsChanged(params);\n      } else if (method === \"wallet_unlockStateChanged\") {\n        this._handleUnlockStateChanged(params);\n      } else if (method === \"wallet_chainChanged\") {\n        this._handleChainChanged(params);\n      } else if (EMITTED_NOTIFICATIONS.includes(payload.method)) {\n        // EIP 1193 subscriptions, per eth-json-rpc-filters/subscriptionManager\n        this.emit(\"data\", payload); // deprecated\n\n        this.emit(\"notification\", params.result);\n        this.emit(\"message\", {\n          type: method,\n          data: params\n        });\n      } // Backward compatibility for older non EIP 1193 subscriptions\n      // this.emit('data', null, payload)\n\n    });\n  }\n\n  get publicConfigStore() {\n    if (!this._sentWarnings.publicConfigStore) {\n      log.warn(messages.warnings.publicConfigStore);\n      this._sentWarnings.publicConfigStore = true;\n    }\n\n    return this._publicConfigStore;\n  }\n  /**\n   * Returns whether the inpage provider is connected to Torus.\n   */\n\n\n  isConnected() {\n    return this._state.isConnected;\n  }\n  /**\n   * Submits an RPC request for the given method, with the given params.\n   * Resolves with the result of the method call, or rejects on error.\n   *\n   * @param args - The RPC request arguments.\n   * @returns A Promise that resolves with the result of the RPC method,\n   * or rejects if an error is encountered.\n   */\n\n\n  async request(args) {\n    if (!args || typeof args !== \"object\" || Array.isArray(args)) {\n      throw ethErrors.rpc.invalidRequest({\n        message: messages.errors.invalidRequestArgs(),\n        data: args\n      });\n    }\n\n    const {\n      method,\n      params\n    } = args;\n\n    if (typeof method !== \"string\" || method.length === 0) {\n      throw ethErrors.rpc.invalidRequest({\n        message: messages.errors.invalidRequestMethod(),\n        data: args\n      });\n    }\n\n    if (params !== undefined && !Array.isArray(params) && (typeof params !== \"object\" || params === null)) {\n      throw ethErrors.rpc.invalidRequest({\n        message: messages.errors.invalidRequestParams(),\n        data: args\n      });\n    }\n\n    return new Promise((resolve, reject) => {\n      this._rpcRequest({\n        method,\n        params\n      }, getRpcPromiseCallback(resolve, reject));\n    });\n  }\n  /**\n   * Submits an RPC request per the given JSON-RPC request object.\n   *\n   * @param payload - The RPC request object.\n   * @param cb - The callback function.\n   */\n\n\n  sendAsync(payload, callback) {\n    this._rpcRequest(payload, callback);\n  }\n  /**\n   * We override the following event methods so that we can warn consumers\n   * about deprecated events:\n   *   addListener, on, once, prependListener, prependOnceListener\n   */\n\n\n  addListener(eventName, listener) {\n    this._warnOfDeprecation(eventName);\n\n    return super.addListener(eventName, listener);\n  }\n\n  on(eventName, listener) {\n    this._warnOfDeprecation(eventName);\n\n    return super.on(eventName, listener);\n  }\n\n  once(eventName, listener) {\n    this._warnOfDeprecation(eventName);\n\n    return super.once(eventName, listener);\n  }\n\n  prependListener(eventName, listener) {\n    this._warnOfDeprecation(eventName);\n\n    return super.prependListener(eventName, listener);\n  }\n\n  prependOnceListener(eventName, listener) {\n    this._warnOfDeprecation(eventName);\n\n    return super.prependOnceListener(eventName, listener);\n  } // Private Methods\n  //= ===================\n\n  /**\n   * Constructor helper.\n   * Populates initial state by calling 'wallet_getProviderState' and emits\n   * necessary events.\n   */\n\n\n  async _initializeState() {\n    try {\n      const {\n        accounts,\n        chainId,\n        isUnlocked,\n        networkVersion\n      } = await this.request({\n        method: \"wallet_getProviderState\"\n      }); // indicate that we've connected, for EIP-1193 compliance\n\n      this.emit(\"connect\", {\n        chainId\n      });\n\n      this._handleChainChanged({\n        chainId,\n        networkVersion\n      });\n\n      this._handleUnlockStateChanged({\n        accounts,\n        isUnlocked\n      });\n\n      this._handleAccountsChanged(accounts);\n    } catch (error) {\n      log.error(\"MetaMask: Failed to get initial state. Please report this bug.\", error);\n    } finally {\n      log.info(\"initialized state\");\n      this._state.initialized = true;\n      this.emit(\"_initialized\");\n    }\n  }\n  /**\n   * Internal RPC method. Forwards requests to background via the RPC engine.\n   * Also remap ids inbound and outbound.\n   *\n   * @param payload - The RPC request object.\n   * @param callback - The consumer's callback.\n   * @param isInternal - false - Whether the request is internal.\n   */\n\n\n  _rpcRequest(payload, callback) {\n    let isInternal = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    let cb = callback;\n    const _payload = payload;\n\n    if (!Array.isArray(_payload)) {\n      if (!_payload.jsonrpc) {\n        _payload.jsonrpc = \"2.0\";\n      }\n\n      if (_payload.method === \"eth_accounts\" || _payload.method === \"eth_requestAccounts\") {\n        // handle accounts changing\n        cb = (err, res) => {\n          this._handleAccountsChanged(res.result || [], _payload.method === \"eth_accounts\", isInternal);\n\n          callback(err, res);\n        };\n      } else if (_payload.method === \"wallet_getProviderState\") {\n        this._rpcEngine.handle(payload, cb);\n\n        return;\n      }\n    }\n\n    this.tryPreopenHandle(_payload, cb);\n  }\n\n  send(methodOrPayload, callbackOrArgs) {\n    if (!this._sentWarnings.send) {\n      log.warn(messages.warnings.sendDeprecation);\n      this._sentWarnings.send = true;\n    }\n\n    if (typeof methodOrPayload === \"string\" && (!callbackOrArgs || Array.isArray(callbackOrArgs))) {\n      return new Promise((resolve, reject) => {\n        try {\n          this._rpcRequest({\n            method: methodOrPayload,\n            params: callbackOrArgs\n          }, getRpcPromiseCallback(resolve, reject, false));\n        } catch (error) {\n          reject(error);\n        }\n      });\n    }\n\n    if (methodOrPayload && typeof methodOrPayload === \"object\" && typeof callbackOrArgs === \"function\") {\n      return this._rpcRequest(methodOrPayload, callbackOrArgs);\n    }\n\n    return this._sendSync(methodOrPayload);\n  }\n  /**\n   * DEPRECATED.\n   * Internal backwards compatibility method, used in send.\n   */\n\n\n  _sendSync(payload) {\n    let result;\n\n    switch (payload.method) {\n      case \"eth_accounts\":\n        result = this.selectedAddress ? [this.selectedAddress] : [];\n        break;\n\n      case \"eth_coinbase\":\n        result = this.selectedAddress || null;\n        break;\n\n      case \"eth_uninstallFilter\":\n        this._rpcRequest(payload, NOOP);\n\n        result = true;\n        break;\n\n      case \"net_version\":\n        result = this.networkVersion || null;\n        break;\n\n      default:\n        throw new Error(messages.errors.unsupportedSync(payload.method));\n    }\n\n    return {\n      id: payload.id,\n      jsonrpc: payload.jsonrpc,\n      result\n    };\n  }\n  /**\n   * When the provider becomes connected, updates internal state and emits\n   * required events. Idempotent.\n   *\n   * @param chainId - The ID of the newly connected chain.\n   * emits MetaMaskInpageProvider#connect\n   */\n\n\n  _handleConnect(chainId) {\n    if (!this._state.isConnected) {\n      this._state.isConnected = true;\n      this.emit(\"connect\", {\n        chainId\n      });\n      log.debug(messages.info.connected(chainId));\n    }\n  }\n  /**\n   * When the provider becomes disconnected, updates internal state and emits\n   * required events. Idempotent with respect to the isRecoverable parameter.\n   *\n   * Error codes per the CloseEvent status codes as required by EIP-1193:\n   * https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n   *\n   * @param isRecoverable - Whether the disconnection is recoverable.\n   * @param errorMessage - A custom error message.\n   * emits MetaMaskInpageProvider#disconnect\n   */\n\n\n  _handleDisconnect(isRecoverable, errorMessage) {\n    if (this._state.isConnected || !this._state.isPermanentlyDisconnected && !isRecoverable) {\n      this._state.isConnected = false;\n      let error;\n\n      if (isRecoverable) {\n        error = new EthereumRpcError(1013, // Try again later\n        errorMessage || messages.errors.disconnected());\n        log.debug(error);\n      } else {\n        error = new EthereumRpcError(1011, // Internal error\n        errorMessage || messages.errors.permanentlyDisconnected());\n        log.error(error);\n        this.chainId = null;\n        this._state.accounts = null;\n        this.selectedAddress = null;\n        this._state.isUnlocked = false;\n        this._state.isPermanentlyDisconnected = true;\n      }\n\n      this.emit(\"disconnect\", error);\n    }\n  }\n  /**\n   * Called when connection is lost to critical streams.\n   *\n   * emits MetamaskInpageProvider#disconnect\n   */\n\n\n  _handleStreamDisconnect(streamName, error) {\n    logStreamDisconnectWarning(streamName, error, this);\n\n    this._handleDisconnect(false, error ? error.message : undefined);\n  }\n  /**\n   * Called when accounts may have changed.\n   */\n\n\n  _handleAccountsChanged(accounts) {\n    let isEthAccounts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    let isInternal = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    // defensive programming\n    let finalAccounts = accounts;\n\n    if (!Array.isArray(finalAccounts)) {\n      log.error(\"MetaMask: Received non-array accounts parameter. Please report this bug.\", finalAccounts);\n      finalAccounts = [];\n    }\n\n    for (const account of accounts) {\n      if (typeof account !== \"string\") {\n        log.error(\"MetaMask: Received non-string account. Please report this bug.\", accounts);\n        finalAccounts = [];\n        break;\n      }\n    } // emit accountsChanged if anything about the accounts array has changed\n\n\n    if (!dequal(this._state.accounts, finalAccounts)) {\n      // we should always have the correct accounts even before eth_accounts\n      // returns, except in cases where isInternal is true\n      if (isEthAccounts && Array.isArray(this._state.accounts) && this._state.accounts.length > 0 && !isInternal) {\n        log.error('MetaMask: \"eth_accounts\" unexpectedly updated accounts. Please report this bug.', finalAccounts);\n      }\n\n      this._state.accounts = finalAccounts;\n      this.emit(\"accountsChanged\", finalAccounts);\n    } // handle selectedAddress\n\n\n    if (this.selectedAddress !== finalAccounts[0]) {\n      this.selectedAddress = finalAccounts[0] || null;\n    }\n  }\n  /**\n   * Upon receipt of a new chainId and networkVersion, emits corresponding\n   * events and sets relevant public state.\n   * Does nothing if neither the chainId nor the networkVersion are different\n   * from existing values.\n   *\n   * emits MetamaskInpageProvider#chainChanged\n   * @param networkInfo - An object with network info.\n   */\n\n\n  _handleChainChanged() {\n    let {\n      chainId,\n      networkVersion\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    if (!chainId || !networkVersion) {\n      log.error(\"MetaMask: Received invalid network parameters. Please report this bug.\", {\n        chainId,\n        networkVersion\n      });\n      return;\n    }\n\n    if (networkVersion === \"loading\") {\n      this._handleDisconnect(true);\n    } else {\n      this._handleConnect(chainId);\n\n      if (chainId !== this.chainId) {\n        this.chainId = chainId;\n\n        if (this._state.initialized) {\n          this.emit(\"chainChanged\", this.chainId);\n        }\n      }\n    }\n  }\n  /**\n   * Upon receipt of a new isUnlocked state, sets relevant public state.\n   * Calls the accounts changed handler with the received accounts, or an empty\n   * array.\n   *\n   * Does nothing if the received value is equal to the existing value.\n   * There are no lock/unlock events.\n   *\n   * @param opts - Options bag.\n   */\n\n\n  _handleUnlockStateChanged() {\n    let {\n      accounts,\n      isUnlocked\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    if (typeof isUnlocked !== \"boolean\") {\n      log.error(\"MetaMask: Received invalid isUnlocked parameter. Please report this bug.\", {\n        isUnlocked\n      });\n      return;\n    }\n\n    if (isUnlocked !== this._state.isUnlocked) {\n      this._state.isUnlocked = isUnlocked;\n\n      this._handleAccountsChanged(accounts || []);\n    }\n  }\n  /**\n   * Warns of deprecation for the given event, if applicable.\n   */\n\n\n  _warnOfDeprecation(eventName) {\n    if (this._sentWarnings.events[eventName] === false) {\n      log.warn(messages.warnings.events[eventName]);\n      this._sentWarnings.events[eventName] = true;\n    }\n  }\n\n}\n\n_defineProperty(TorusInpageProvider, \"_defaultState\", {\n  accounts: null,\n  isConnected: false,\n  isUnlocked: false,\n  initialized: false,\n  isPermanentlyDisconnected: false,\n  hasEmittedConnection: false\n});\n\nconst defaults = options => ({\n  algorithms: options.algorithms || [\"sha256\"],\n  delimiter: options.delimiter || \" \",\n  full: options.full || false\n}); // Generate list of hashes\n\n\nconst hashes = (options, data) => {\n  const internalHashes = {};\n  options.algorithms.forEach(algorithm => {\n    internalHashes[algorithm] = createHash(algorithm).update(data, \"utf8\").digest(\"base64\");\n  });\n  return internalHashes;\n}; // Build an integrity string\n\n\nconst integrity = (options, sri) => {\n  let output = \"\"; // Hash list\n\n  output += Object.keys(sri.hashes).map(algorithm => \"\".concat(algorithm, \"-\").concat(sri.hashes[algorithm])).join(options.delimiter);\n  return output;\n};\n\nconst main = (options, data) => {\n  // Defaults\n  const finalOptions = defaults(options);\n  const sri = {\n    hashes: hashes(finalOptions, data),\n    integrity: undefined\n  };\n  sri.integrity = integrity(finalOptions, sri);\n  return finalOptions.full ? sri : sri.integrity;\n};\n\nclass PopupHandler extends EventEmitter {\n  constructor(_ref) {\n    let {\n      url,\n      target,\n      features\n    } = _ref;\n    super();\n\n    _defineProperty(this, \"url\", void 0);\n\n    _defineProperty(this, \"target\", void 0);\n\n    _defineProperty(this, \"features\", void 0);\n\n    _defineProperty(this, \"window\", void 0);\n\n    _defineProperty(this, \"windowTimer\", void 0);\n\n    _defineProperty(this, \"iClosedWindow\", void 0);\n\n    this.url = url;\n    this.target = target || \"_blank\";\n    this.features = features || getPopupFeatures();\n    this.window = undefined;\n    this.windowTimer = undefined;\n    this.iClosedWindow = false;\n\n    this._setupTimer();\n  }\n\n  _setupTimer() {\n    this.windowTimer = Number(setInterval(() => {\n      if (this.window && this.window.closed) {\n        clearInterval(this.windowTimer);\n\n        if (!this.iClosedWindow) {\n          this.emit(\"close\");\n        }\n\n        this.iClosedWindow = false;\n        this.window = undefined;\n      }\n\n      if (this.window === undefined) clearInterval(this.windowTimer);\n    }, 500));\n  }\n\n  open() {\n    var _this$window;\n\n    this.window = window.open(this.url.href, this.target, this.features);\n    if ((_this$window = this.window) !== null && _this$window !== void 0 && _this$window.focus) this.window.focus();\n    return Promise.resolve();\n  }\n\n  close() {\n    this.iClosedWindow = true;\n    if (this.window) this.window.close();\n  }\n\n  redirect(locationReplaceOnRedirect) {\n    if (locationReplaceOnRedirect) {\n      window.location.replace(this.url.href);\n    } else {\n      window.location.href = this.url.href;\n    }\n  }\n\n}\n\n/**\n * Returns whether the given image URL exists\n * @param url - the url of the image\n * @returns - whether the image exists\n */\n\nfunction imgExists(url) {\n  return new Promise((resolve, reject) => {\n    try {\n      const img = document.createElement(\"img\");\n\n      img.onload = () => resolve(true);\n\n      img.onerror = () => resolve(false);\n\n      img.src = url;\n    } catch (e) {\n      reject(e);\n    }\n  });\n}\n/**\n * Extracts a name for the site from the DOM\n */\n\n\nconst getSiteName = window => {\n  const {\n    document\n  } = window;\n  const siteName = document.querySelector('head > meta[property=\"og:site_name\"]');\n\n  if (siteName) {\n    return siteName.content;\n  }\n\n  const metaTitle = document.querySelector('head > meta[name=\"title\"]');\n\n  if (metaTitle) {\n    return metaTitle.content;\n  }\n\n  if (document.title && document.title.length > 0) {\n    return document.title;\n  }\n\n  return window.location.hostname;\n};\n/**\n * Extracts an icon for the site from the DOM\n */\n\n\nasync function getSiteIcon(window) {\n  const {\n    document\n  } = window; // Use the site's favicon if it exists\n\n  let icon = document.querySelector('head > link[rel=\"shortcut icon\"]');\n\n  if (icon && (await imgExists(icon.href))) {\n    return icon.href;\n  } // Search through available icons in no particular order\n\n\n  icon = Array.from(document.querySelectorAll('head > link[rel=\"icon\"]')).find(_icon => Boolean(_icon.href));\n\n  if (icon && (await imgExists(icon.href))) {\n    return icon.href;\n  }\n\n  return null;\n}\n/**\n * Gets site metadata and returns it\n *\n */\n\n\nconst getSiteMetadata = async () => ({\n  name: getSiteName(window),\n  icon: await getSiteIcon(window)\n});\n/**\n * Sends site metadata over an RPC request.\n */\n\n\nasync function sendSiteMetadata(engine) {\n  try {\n    const domainMetadata = await getSiteMetadata(); // call engine.handle directly to avoid normal RPC request handling\n\n    engine.handle({\n      jsonrpc: \"2.0\",\n      id: getPreopenInstanceId(),\n      method: \"wallet_sendDomainMetadata\",\n      params: domainMetadata\n    }, NOOP);\n  } catch (error) {\n    log.error({\n      message: messages.errors.sendSiteMetadata(),\n      originalError: error\n    });\n  }\n}\n\nconst _excluded = [\"host\", \"chainId\", \"networkName\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nconst defaultVerifiers = {\n  [LOGIN_PROVIDER.GOOGLE]: true,\n  [LOGIN_PROVIDER.FACEBOOK]: true,\n  [LOGIN_PROVIDER.REDDIT]: true,\n  [LOGIN_PROVIDER.TWITCH]: true,\n  [LOGIN_PROVIDER.DISCORD]: true\n};\nconst iframeIntegrity = \"sha384-YoBKuLPbF12Zj+b1zD3pfk5WTvgz6VU4AQtX0oy9qBWZKZIoAx+kY64Ic/d784Vm\";\nconst expectedCacheControlHeader = \"max-age=3600\";\nconst UNSAFE_METHODS = [\"eth_sendTransaction\", \"eth_signTypedData\", \"eth_signTypedData_v3\", \"eth_signTypedData_v4\", \"personal_sign\", \"eth_getEncryptionPublicKey\", \"eth_decrypt\"];\nconst isLocalStorageAvailable = storageAvailable(\"localStorage\"); // preload for iframe doesn't work https://bugs.chromium.org/p/chromium/issues/detail?id=593267\n\n(async function preLoadIframe() {\n  try {\n    if (typeof document === \"undefined\") return;\n    const torusIframeHtml = document.createElement(\"link\");\n    const {\n      torusUrl\n    } = await getTorusUrl(\"production\", {\n      check: false,\n      hash: iframeIntegrity,\n      version: \"\"\n    });\n    torusIframeHtml.href = \"\".concat(torusUrl, \"/popup\");\n    torusIframeHtml.crossOrigin = \"anonymous\";\n    torusIframeHtml.type = \"text/html\";\n    torusIframeHtml.rel = \"prefetch\";\n\n    if (torusIframeHtml.relList && torusIframeHtml.relList.supports) {\n      if (torusIframeHtml.relList.supports(\"prefetch\")) {\n        document.head.appendChild(torusIframeHtml);\n      }\n    }\n  } catch (error) {\n    log.warn(error);\n  }\n})();\n\nclass Torus {\n  constructor() {\n    let {\n      buttonPosition = BUTTON_POSITION.BOTTOM_LEFT,\n      modalZIndex = 99999,\n      apiKey = \"torus-default\"\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _defineProperty(this, \"buttonPosition\", BUTTON_POSITION.BOTTOM_LEFT);\n\n    _defineProperty(this, \"torusUrl\", void 0);\n\n    _defineProperty(this, \"torusIframe\", void 0);\n\n    _defineProperty(this, \"styleLink\", void 0);\n\n    _defineProperty(this, \"isLoggedIn\", void 0);\n\n    _defineProperty(this, \"isInitialized\", void 0);\n\n    _defineProperty(this, \"torusWidgetVisibility\", void 0);\n\n    _defineProperty(this, \"torusAlert\", void 0);\n\n    _defineProperty(this, \"nodeDetailManager\", void 0);\n\n    _defineProperty(this, \"torusJs\", void 0);\n\n    _defineProperty(this, \"apiKey\", void 0);\n\n    _defineProperty(this, \"modalZIndex\", void 0);\n\n    _defineProperty(this, \"alertZIndex\", void 0);\n\n    _defineProperty(this, \"torusAlertContainer\", void 0);\n\n    _defineProperty(this, \"isIframeFullScreen\", void 0);\n\n    _defineProperty(this, \"whiteLabel\", void 0);\n\n    _defineProperty(this, \"requestedVerifier\", void 0);\n\n    _defineProperty(this, \"currentVerifier\", void 0);\n\n    _defineProperty(this, \"embedTranslations\", void 0);\n\n    _defineProperty(this, \"ethereum\", void 0);\n\n    _defineProperty(this, \"provider\", void 0);\n\n    _defineProperty(this, \"communicationMux\", void 0);\n\n    _defineProperty(this, \"isLoginCallback\", void 0);\n\n    _defineProperty(this, \"dappStorageKey\", void 0);\n\n    _defineProperty(this, \"paymentProviders\", configuration.paymentProviders);\n\n    _defineProperty(this, \"loginHint\", \"\");\n\n    _defineProperty(this, \"useWalletConnect\", void 0);\n\n    this.buttonPosition = buttonPosition;\n    this.torusUrl = \"\";\n    this.isLoggedIn = false; // ethereum.enable working\n\n    this.isInitialized = false; // init done\n\n    this.torusWidgetVisibility = true;\n    this.requestedVerifier = \"\";\n    this.currentVerifier = \"\";\n    this.nodeDetailManager = new NodeDetailManager();\n    this.torusJs = new TorusJs({\n      metadataHost: \"https://metadata.tor.us\",\n      allowHost: \"https://signer.tor.us/api/allow\"\n    });\n    this.apiKey = apiKey;\n    TorusJs.setAPIKey(apiKey);\n    setAPIKey(apiKey);\n    this.modalZIndex = modalZIndex;\n    this.alertZIndex = modalZIndex + 1000;\n    this.isIframeFullScreen = false;\n    this.dappStorageKey = \"\";\n  }\n\n  async init() {\n    let {\n      buildEnv = TORUS_BUILD_ENV.PRODUCTION,\n      enableLogging = false,\n      // deprecated: use loginConfig instead\n      enabledVerifiers = defaultVerifiers,\n      network = {\n        host: \"mainnet\",\n        chainId: null,\n        networkName: \"\",\n        blockExplorer: \"\",\n        ticker: \"\",\n        tickerName: \"\"\n      },\n      loginConfig = {},\n      showTorusButton = true,\n      integrity = {\n        check: false,\n        hash: iframeIntegrity,\n        version: \"\"\n      },\n      whiteLabel,\n      skipTKey = false,\n      useLocalStorage = false,\n      useWalletConnect = false\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (this.isInitialized) throw new Error(\"Already initialized\");\n    const {\n      torusUrl,\n      logLevel\n    } = await getTorusUrl(buildEnv, integrity);\n    log.info(torusUrl, \"url loaded\");\n    this.torusUrl = torusUrl;\n    this.whiteLabel = whiteLabel;\n    this.useWalletConnect = useWalletConnect;\n    log.setDefaultLevel(logLevel);\n    if (enableLogging) log.enableAll();else log.disableAll();\n    this.torusWidgetVisibility = showTorusButton;\n    let dappStorageKey = \"\";\n\n    if (isLocalStorageAvailable && useLocalStorage) {\n      const localStorageKey = \"\".concat(configuration.localStorageKeyPrefix).concat(window.location.hostname);\n      const storedKey = window.localStorage.getItem(localStorageKey);\n      if (storedKey) dappStorageKey = storedKey;else {\n        const generatedKey = \"torus-app-\".concat(getPreopenInstanceId());\n        window.localStorage.setItem(localStorageKey, generatedKey);\n        dappStorageKey = generatedKey;\n      }\n    }\n\n    this.dappStorageKey = dappStorageKey;\n    const torusIframeUrl = new URL(torusUrl);\n    if (torusIframeUrl.pathname.endsWith(\"/\")) torusIframeUrl.pathname += \"popup\";else torusIframeUrl.pathname += \"/popup\";\n\n    if (dappStorageKey) {\n      torusIframeUrl.hash = \"#dappStorageKey=\".concat(dappStorageKey);\n    } // Iframe code\n\n\n    this.torusIframe = htmlToElement(\"<iframe\\n        id=\\\"torusIframe\\\"\\n        allow=\".concat(useWalletConnect ? \"camera\" : \"\", \"\\n        class=\\\"torusIframe\\\"\\n        src=\\\"\").concat(torusIframeUrl.href, \"\\\"\\n        style=\\\"display: none; position: fixed; top: 0; right: 0; width: 100%;\\n        height: 100%; border: none; border-radius: 0; z-index: \").concat(this.modalZIndex, \"\\\"\\n      ></iframe>\"));\n    this.torusAlertContainer = htmlToElement('<div id=\"torusAlertContainer\"></div>');\n    this.torusAlertContainer.style.display = \"none\";\n    this.torusAlertContainer.style.setProperty(\"z-index\", this.alertZIndex.toString());\n    const link = window.document.createElement(\"link\");\n    link.setAttribute(\"rel\", \"stylesheet\");\n    link.setAttribute(\"type\", \"text/css\");\n    link.setAttribute(\"href\", \"\".concat(torusUrl, \"/css/widget.css\"));\n    this.styleLink = link;\n    const {\n      defaultLanguage = getUserLanguage(),\n      customTranslations = {}\n    } = this.whiteLabel || {};\n    const mergedTranslations = deepmerge(configuration.translations, customTranslations);\n    const languageTranslations = mergedTranslations[defaultLanguage] || configuration.translations[getUserLanguage()];\n    this.embedTranslations = languageTranslations.embed;\n\n    const handleSetup = async () => {\n      await documentReady();\n      return new Promise((resolve, reject) => {\n        this.torusIframe.onload = async () => {\n          // only do this if iframe is not full screen\n          this._setupWeb3();\n\n          const initStream = this.communicationMux.getStream(\"init_stream\");\n          initStream.on(\"data\", chunk => {\n            const {\n              name,\n              data,\n              error\n            } = chunk;\n\n            if (name === \"init_complete\" && data.success) {\n              // resolve promise\n              this.isInitialized = true;\n\n              this._displayIframe(this.isIframeFullScreen);\n\n              resolve(undefined);\n            } else if (error) {\n              reject(new Error(error));\n            }\n          });\n          initStream.write({\n            name: \"init_stream\",\n            data: {\n              enabledVerifiers,\n              loginConfig,\n              whiteLabel: this.whiteLabel,\n              buttonPosition: this.buttonPosition,\n              torusWidgetVisibility: this.torusWidgetVisibility,\n              apiKey: this.apiKey,\n              skipTKey,\n              network\n            }\n          });\n        };\n\n        window.document.head.appendChild(this.styleLink);\n        window.document.body.appendChild(this.torusIframe);\n        window.document.body.appendChild(this.torusAlertContainer);\n      });\n    };\n\n    if (buildEnv === \"production\" && integrity.check) {\n      // hacky solution to check for iframe integrity\n      const fetchUrl = \"\".concat(torusUrl, \"/popup\");\n      const resp = await fetch(fetchUrl, {\n        cache: \"reload\"\n      });\n\n      if (resp.headers.get(\"Cache-Control\") !== expectedCacheControlHeader) {\n        throw new Error(\"Unexpected Cache-Control headers, got \".concat(resp.headers.get(\"Cache-Control\")));\n      }\n\n      const response = await resp.text();\n      const calculatedIntegrity = main({\n        algorithms: [\"sha384\"]\n      }, response);\n      log.info(calculatedIntegrity, \"integrity\");\n\n      if (calculatedIntegrity === integrity.hash) {\n        await handleSetup();\n      } else {\n        this.clearInit();\n        throw new Error(\"Integrity check failed\");\n      }\n    } else {\n      await handleSetup();\n    }\n\n    return undefined;\n  }\n\n  login() {\n    let {\n      verifier = \"\",\n      login_hint: loginHint = \"\"\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (!this.isInitialized) throw new Error(\"Call init() first\");\n    this.requestedVerifier = verifier;\n    this.loginHint = loginHint;\n    return this.ethereum.enable();\n  }\n\n  logout() {\n    return new Promise((resolve, reject) => {\n      if (!this.isLoggedIn) {\n        reject(new Error(\"User has not logged in yet\"));\n        return;\n      }\n\n      const logOutStream = this.communicationMux.getStream(\"logout\");\n      logOutStream.write({\n        name: \"logOut\"\n      });\n      const statusStream = this.communicationMux.getStream(\"status\");\n\n      const statusStreamHandler = status => {\n        if (!status.loggedIn) {\n          this.isLoggedIn = false;\n          this.currentVerifier = \"\";\n          this.requestedVerifier = \"\";\n          resolve();\n        } else reject(new Error(\"Some Error Occured\"));\n      };\n\n      handleStream(statusStream, \"data\", statusStreamHandler);\n    });\n  }\n\n  async cleanUp() {\n    if (this.isLoggedIn) {\n      await this.logout();\n    }\n\n    this.clearInit();\n  }\n\n  clearInit() {\n    function isElement(element) {\n      return element instanceof Element || element instanceof HTMLDocument;\n    }\n\n    if (isElement(this.styleLink) && window.document.body.contains(this.styleLink)) {\n      this.styleLink.remove();\n      this.styleLink = undefined;\n    }\n\n    if (isElement(this.torusIframe) && window.document.body.contains(this.torusIframe)) {\n      this.torusIframe.remove();\n      this.torusIframe = undefined;\n    }\n\n    if (isElement(this.torusAlertContainer) && window.document.body.contains(this.torusAlertContainer)) {\n      this.torusAlert = undefined;\n      this.torusAlertContainer.remove();\n      this.torusAlertContainer = undefined;\n    }\n\n    this.isInitialized = false;\n  }\n\n  hideTorusButton() {\n    this.torusWidgetVisibility = false;\n\n    this._sendWidgetVisibilityStatus(false);\n\n    this._displayIframe();\n  }\n\n  showTorusButton() {\n    this.torusWidgetVisibility = true;\n\n    this._sendWidgetVisibilityStatus(true);\n\n    this._displayIframe();\n  }\n\n  setProvider() {\n    let _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    let {\n      host = \"mainnet\",\n      chainId = null,\n      networkName = \"\"\n    } = _ref,\n        rest = _objectWithoutProperties(_ref, _excluded);\n\n    return new Promise((resolve, reject) => {\n      const providerChangeStream = this.communicationMux.getStream(\"provider_change\");\n\n      const handler = chunk => {\n        const {\n          err,\n          success\n        } = chunk.data;\n        log.info(chunk);\n\n        if (err) {\n          reject(err);\n        } else if (success) {\n          resolve();\n        } else reject(new Error(\"some error occured\"));\n      };\n\n      handleStream(providerChangeStream, \"data\", handler);\n      const preopenInstanceId = getPreopenInstanceId();\n\n      this._handleWindow(preopenInstanceId, {\n        target: \"_blank\",\n        features: FEATURES_PROVIDER_CHANGE_WINDOW\n      });\n\n      providerChangeStream.write({\n        name: \"show_provider_change\",\n        data: {\n          network: _objectSpread({\n            host,\n            chainId,\n            networkName\n          }, rest),\n          preopenInstanceId,\n          override: false\n        }\n      });\n    });\n  }\n\n  showWallet(path) {\n    let params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const showWalletStream = this.communicationMux.getStream(\"show_wallet\");\n    const finalPath = path ? \"/\".concat(path) : \"\";\n    showWalletStream.write({\n      name: \"show_wallet\",\n      data: {\n        path: finalPath\n      }\n    });\n\n    const showWalletHandler = chunk => {\n      if (chunk.name === \"show_wallet_instance\") {\n        // Let the error propogate up (hence, no try catch)\n        const {\n          instanceId\n        } = chunk.data;\n        const finalUrl = new URL(\"\".concat(this.torusUrl, \"/wallet\").concat(finalPath)); // Using URL constructor to prevent js injection and allow parameter validation.!\n\n        finalUrl.searchParams.append(\"integrity\", \"true\");\n        finalUrl.searchParams.append(\"instanceId\", instanceId);\n        Object.keys(params).forEach(x => {\n          finalUrl.searchParams.append(x, params[x]);\n        });\n\n        if (this.dappStorageKey) {\n          finalUrl.hash = \"#dappStorageKey=\".concat(this.dappStorageKey);\n        }\n\n        const walletWindow = new PopupHandler({\n          url: finalUrl,\n          features: FEATURES_DEFAULT_WALLET_WINDOW\n        });\n        walletWindow.open();\n      }\n    };\n\n    handleStream(showWalletStream, \"data\", showWalletHandler);\n  }\n\n  async getPublicAddress(_ref2) {\n    let {\n      verifier,\n      verifierId,\n      isExtended = false\n    } = _ref2;\n    if (!configuration.supportedVerifierList.includes(verifier) || !WALLET_OPENLOGIN_VERIFIER_MAP[verifier]) throw new Error(\"Unsupported verifier\");\n    const nodeDetails = await this.nodeDetailManager.getNodeDetails({\n      verifier,\n      verifierId\n    });\n    const endpoints = nodeDetails.torusNodeEndpoints;\n    const torusNodePubs = nodeDetails.torusNodePub;\n    const walletVerifier = verifier;\n    const openloginVerifier = WALLET_OPENLOGIN_VERIFIER_MAP[verifier];\n\n    try {\n      const existingV1User = await this.torusJs.getUserTypeAndAddress(endpoints, torusNodePubs, {\n        verifier: walletVerifier,\n        verifierId\n      });\n\n      if (existingV1User.typeOfUser === \"v1\") {\n        if (!isExtended) return existingV1User.address;\n        return existingV1User;\n      } // we don't support v2 users with v1 verifiers so get or assign the key for v2 user on v2 `verifier`\n\n\n      const v2User = await this.torusJs.getUserTypeAndAddress(endpoints, torusNodePubs, {\n        verifier: openloginVerifier,\n        verifierId\n      }, true);\n      if (!isExtended) return v2User.address;\n      return v2User;\n    } catch (error) {\n      if (error !== null && error !== void 0 && error.message.includes(\"Verifier + VerifierID has not yet been assigned\")) {\n        // if user doesn't have key then assign it with v2 verifier\n        const newV2User = await this.torusJs.getUserTypeAndAddress(endpoints, torusNodePubs, {\n          verifier: openloginVerifier,\n          verifierId\n        }, true);\n        if (!isExtended) return newV2User.address;\n        return newV2User;\n      }\n\n      throw error;\n    }\n  }\n\n  getUserInfo(message) {\n    return new Promise((resolve, reject) => {\n      if (this.isLoggedIn) {\n        const userInfoAccessStream = this.communicationMux.getStream(\"user_info_access\");\n        userInfoAccessStream.write({\n          name: \"user_info_access_request\"\n        });\n\n        const userInfoAccessHandler = chunk => {\n          const {\n            name,\n            data: {\n              approved,\n              payload,\n              rejected,\n              newRequest\n            }\n          } = chunk;\n\n          if (name === \"user_info_access_response\") {\n            if (approved) {\n              resolve(payload);\n            } else if (rejected) {\n              reject(new Error(\"User rejected the request\"));\n            } else if (newRequest) {\n              const userInfoStream = this.communicationMux.getStream(\"user_info\");\n\n              const userInfoHandler = handlerChunk => {\n                if (handlerChunk.name === \"user_info_response\") {\n                  if (handlerChunk.data.approved) {\n                    resolve(handlerChunk.data.payload);\n                  } else {\n                    reject(new Error(\"User rejected the request\"));\n                  }\n                }\n              };\n\n              handleStream(userInfoStream, \"data\", userInfoHandler);\n              const preopenInstanceId = getPreopenInstanceId();\n\n              this._handleWindow(preopenInstanceId, {\n                target: \"_blank\",\n                features: FEATURES_PROVIDER_CHANGE_WINDOW\n              });\n\n              userInfoStream.write({\n                name: \"user_info_request\",\n                data: {\n                  message,\n                  preopenInstanceId\n                }\n              });\n            }\n          }\n        };\n\n        handleStream(userInfoAccessStream, \"data\", userInfoAccessHandler);\n      } else reject(new Error(\"User has not logged in yet\"));\n    });\n  }\n\n  initiateTopup(provider, params) {\n    return new Promise((resolve, reject) => {\n      if (this.isInitialized) {\n        const {\n          errors,\n          isValid\n        } = validatePaymentProvider(provider, params);\n\n        if (!isValid) {\n          reject(new Error(JSON.stringify(errors)));\n          return;\n        }\n\n        const topupStream = this.communicationMux.getStream(\"topup\");\n\n        const topupHandler = chunk => {\n          if (chunk.name === \"topup_response\") {\n            if (chunk.data.success) {\n              resolve(chunk.data.success);\n            } else {\n              reject(new Error(chunk.data.error));\n            }\n          }\n        };\n\n        handleStream(topupStream, \"data\", topupHandler);\n        const preopenInstanceId = getPreopenInstanceId();\n\n        this._handleWindow(preopenInstanceId);\n\n        topupStream.write({\n          name: \"topup_request\",\n          data: {\n            provider,\n            params,\n            preopenInstanceId\n          }\n        });\n      } else reject(new Error(\"Torus is not initialized yet\"));\n    });\n  }\n\n  async loginWithPrivateKey(loginParams) {\n    const {\n      privateKey,\n      userInfo\n    } = loginParams;\n    return new Promise((resolve, reject) => {\n      if (this.isInitialized) {\n        if (Buffer.from(privateKey, \"hex\").length !== 32) {\n          reject(new Error(\"Invalid private key, Please provide a 32 byte valid secp25k1 private key\"));\n          return;\n        }\n\n        const loginPrivKeyStream = this.communicationMux.getStream(\"login_with_private_key\");\n\n        const loginHandler = chunk => {\n          if (chunk.name === \"login_with_private_key_response\") {\n            if (chunk.data.success) {\n              resolve(chunk.data.success);\n            } else {\n              reject(new Error(chunk.data.error));\n            }\n          }\n        };\n\n        handleStream(loginPrivKeyStream, \"data\", loginHandler);\n        loginPrivKeyStream.write({\n          name: \"login_with_private_key_request\",\n          data: {\n            privateKey,\n            userInfo\n          }\n        });\n      } else reject(new Error(\"Torus is not initialized yet\"));\n    });\n  }\n\n  async showWalletConnectScanner() {\n    if (!this.useWalletConnect) throw new Error(\"Set `useWalletConnect` as true in init function options to use wallet connect scanner\");\n    return new Promise((resolve, reject) => {\n      if (this.isLoggedIn) {\n        const walletConnectStream = this.communicationMux.getStream(\"wallet_connect_stream\");\n\n        const walletConnectHandler = chunk => {\n          if (chunk.name === \"wallet_connect_stream_res\") {\n            if (chunk.data.success) {\n              resolve(chunk.data.success);\n            } else {\n              reject(new Error(chunk.data.error));\n            }\n\n            this._displayIframe();\n          }\n        };\n\n        handleStream(walletConnectStream, \"data\", walletConnectHandler);\n        walletConnectStream.write({\n          name: \"wallet_connect_stream_req\"\n        });\n\n        this._displayIframe(true);\n      } else reject(new Error(\"User has not logged in yet\"));\n    });\n  }\n\n  _handleWindow(preopenInstanceId) {\n    let {\n      url,\n      target,\n      features\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (preopenInstanceId) {\n      const windowStream = this.communicationMux.getStream(\"window\");\n      const finalUrl = new URL(url || \"\".concat(this.torusUrl, \"/redirect?preopenInstanceId=\").concat(preopenInstanceId));\n\n      if (this.dappStorageKey) {\n        // If multiple instances, it returns the first one\n        if (finalUrl.hash) finalUrl.hash += \"&dappStorageKey=\".concat(this.dappStorageKey);else finalUrl.hash = \"#dappStorageKey=\".concat(this.dappStorageKey);\n      }\n\n      const handledWindow = new PopupHandler({\n        url: finalUrl,\n        target,\n        features\n      });\n      handledWindow.open();\n\n      if (!handledWindow.window) {\n        this._createPopupBlockAlert(preopenInstanceId, finalUrl.href);\n\n        return;\n      }\n\n      windowStream.write({\n        name: \"opened_window\",\n        data: {\n          preopenInstanceId\n        }\n      });\n\n      const closeHandler = _ref3 => {\n        let {\n          preopenInstanceId: receivedId,\n          close\n        } = _ref3;\n\n        if (receivedId === preopenInstanceId && close) {\n          handledWindow.close();\n          windowStream.removeListener(\"data\", closeHandler);\n        }\n      };\n\n      windowStream.on(\"data\", closeHandler);\n      handledWindow.once(\"close\", () => {\n        windowStream.write({\n          data: {\n            preopenInstanceId,\n            closed: true\n          }\n        });\n        windowStream.removeListener(\"data\", closeHandler);\n      });\n    }\n  }\n\n  _setEmbedWhiteLabel(element) {\n    // Set whitelabel\n    const {\n      theme\n    } = this.whiteLabel || {};\n\n    if (theme) {\n      const {\n        isDark = false,\n        colors = {}\n      } = theme;\n      if (isDark) element.classList.add(\"torus-dark\");\n      if (colors.torusBrand1) element.style.setProperty(\"--torus-brand-1\", colors.torusBrand1);\n      if (colors.torusGray2) element.style.setProperty(\"--torus-gray-2\", colors.torusGray2);\n    }\n  }\n\n  _getLogoUrl() {\n    var _this$whiteLabel, _this$whiteLabel$them;\n\n    let logoUrl = \"\".concat(this.torusUrl, \"/images/torus_icon-blue.svg\");\n\n    if ((_this$whiteLabel = this.whiteLabel) !== null && _this$whiteLabel !== void 0 && (_this$whiteLabel$them = _this$whiteLabel.theme) !== null && _this$whiteLabel$them !== void 0 && _this$whiteLabel$them.isDark) {\n      var _this$whiteLabel2;\n\n      logoUrl = ((_this$whiteLabel2 = this.whiteLabel) === null || _this$whiteLabel2 === void 0 ? void 0 : _this$whiteLabel2.logoLight) || logoUrl;\n    } else {\n      var _this$whiteLabel3;\n\n      logoUrl = ((_this$whiteLabel3 = this.whiteLabel) === null || _this$whiteLabel3 === void 0 ? void 0 : _this$whiteLabel3.logoDark) || logoUrl;\n    }\n\n    return logoUrl;\n  }\n\n  _sendWidgetVisibilityStatus(status) {\n    const torusWidgetVisibilityStream = this.communicationMux.getStream(\"torus-widget-visibility\");\n    torusWidgetVisibilityStream.write({\n      data: status\n    });\n  }\n\n  _displayIframe() {\n    let isFull = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    const style = {}; // set phase\n\n    if (!isFull) {\n      style.display = this.torusWidgetVisibility ? \"block\" : \"none\";\n      style.height = \"70px\";\n      style.width = \"70px\";\n\n      switch (this.buttonPosition) {\n        case BUTTON_POSITION.TOP_LEFT:\n          style.top = \"0px\";\n          style.left = \"0px\";\n          style.right = \"auto\";\n          style.bottom = \"auto\";\n          break;\n\n        case BUTTON_POSITION.TOP_RIGHT:\n          style.top = \"0px\";\n          style.right = \"0px\";\n          style.left = \"auto\";\n          style.bottom = \"auto\";\n          break;\n\n        case BUTTON_POSITION.BOTTOM_RIGHT:\n          style.bottom = \"0px\";\n          style.right = \"0px\";\n          style.top = \"auto\";\n          style.left = \"auto\";\n          break;\n\n        case BUTTON_POSITION.BOTTOM_LEFT:\n        default:\n          style.bottom = \"0px\";\n          style.left = \"0px\";\n          style.top = \"auto\";\n          style.right = \"auto\";\n          break;\n      }\n    } else {\n      style.display = \"block\";\n      style.width = \"100%\";\n      style.height = \"100%\";\n      style.top = \"0px\";\n      style.right = \"0px\";\n      style.left = \"0px\";\n      style.bottom = \"0px\";\n    }\n\n    Object.assign(this.torusIframe.style, style);\n    this.isIframeFullScreen = isFull;\n  }\n\n  _setupWeb3() {\n    log.info(\"setupWeb3 running\"); // setup background connection\n\n    const metamaskStream = new BasePostMessageStream({\n      name: \"embed_metamask\",\n      target: \"iframe_metamask\",\n      targetWindow: this.torusIframe.contentWindow,\n      targetOrigin: new URL(this.torusUrl).origin\n    }); // Due to compatibility reasons, we should not set up multiplexing on window.metamaskstream\n    // because the MetamaskInpageProvider also attempts to do so.\n    // We create another LocalMessageDuplexStream for communication between dapp <> iframe\n\n    const communicationStream = new BasePostMessageStream({\n      name: \"embed_comm\",\n      target: \"iframe_comm\",\n      targetWindow: this.torusIframe.contentWindow,\n      targetOrigin: new URL(this.torusUrl).origin\n    }); // Backward compatibility with Gotchi :)\n    // window.metamaskStream = this.communicationStream\n    // compose the inpage provider\n\n    const inpageProvider = new TorusInpageProvider(metamaskStream); // detect eth_requestAccounts and pipe to enable for now\n\n    const detectAccountRequestPrototypeModifier = m => {\n      const originalMethod = inpageProvider[m];\n\n      inpageProvider[m] = function providerFunc(method) {\n        if (method && method === \"eth_requestAccounts\") {\n          return inpageProvider.enable();\n        }\n\n        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          args[_key - 1] = arguments[_key];\n        }\n\n        return originalMethod.apply(this, [method, ...args]);\n      };\n    };\n\n    detectAccountRequestPrototypeModifier(\"send\");\n    detectAccountRequestPrototypeModifier(\"sendAsync\");\n\n    inpageProvider.enable = () => {\n      return new Promise((resolve, reject) => {\n        // If user is already logged in, we assume they have given access to the website\n        inpageProvider.sendAsync({\n          jsonrpc: \"2.0\",\n          id: getPreopenInstanceId(),\n          method: \"eth_requestAccounts\",\n          params: []\n        }, (err, response) => {\n          const {\n            result: res\n          } = response || {};\n\n          if (err) {\n            setTimeout(() => {\n              reject(err);\n            }, 50);\n          } else if (Array.isArray(res) && res.length > 0) {\n            // If user is already rehydrated, resolve this\n            // else wait for something to be written to status stream\n            const handleLoginCb = () => {\n              if (this.requestedVerifier !== \"\" && this.currentVerifier !== this.requestedVerifier) {\n                const {\n                  requestedVerifier\n                } = this; // eslint-disable-next-line promise/no-promise-in-callback\n\n                this.logout() // eslint-disable-next-line promise/always-return\n                .then(_ => {\n                  this.requestedVerifier = requestedVerifier;\n\n                  this._showLoginPopup(true, resolve, reject);\n                }).catch(error => reject(error));\n              } else {\n                resolve(res);\n              }\n            };\n\n            if (this.isLoggedIn) {\n              handleLoginCb();\n            } else {\n              this.isLoginCallback = handleLoginCb;\n            }\n          } else {\n            // set up listener for login\n            this._showLoginPopup(true, resolve, reject);\n          }\n        });\n      });\n    };\n\n    inpageProvider.tryPreopenHandle = (payload, cb) => {\n      const _payload = payload;\n\n      if (!Array.isArray(_payload) && UNSAFE_METHODS.includes(_payload.method)) {\n        const preopenInstanceId = getPreopenInstanceId();\n\n        this._handleWindow(preopenInstanceId, {\n          target: \"_blank\",\n          features: FEATURES_CONFIRM_WINDOW\n        });\n\n        _payload.preopenInstanceId = preopenInstanceId;\n      }\n\n      inpageProvider._rpcEngine.handle(_payload, cb);\n    }; // Work around for web3@1.0 deleting the bound `sendAsync` but not the unbound\n    // `sendAsync` method on the prototype, causing `this` reference issues with drizzle\n\n\n    const proxiedInpageProvider = new Proxy(inpageProvider, {\n      // straight up lie that we deleted the property so that it doesnt\n      // throw an error in strict mode\n      deleteProperty: () => true\n    });\n    this.ethereum = proxiedInpageProvider;\n    const communicationMux = setupMultiplex(communicationStream);\n    this.communicationMux = communicationMux;\n    const windowStream = communicationMux.getStream(\"window\");\n    windowStream.on(\"data\", chunk => {\n      if (chunk.name === \"create_window\") {\n        // url is the url we need to open\n        // we can pass the final url upfront so that it removes the step of redirecting to /redirect and waiting for finalUrl\n        this._createPopupBlockAlert(chunk.data.preopenInstanceId, chunk.data.url);\n      }\n    }); // show torus widget if button clicked\n\n    const widgetStream = communicationMux.getStream(\"widget\");\n    widgetStream.on(\"data\", chunk => {\n      const {\n        data\n      } = chunk;\n\n      this._displayIframe(data);\n    }); // Show torus button if wallet has been hydrated/detected\n\n    const statusStream = communicationMux.getStream(\"status\");\n    statusStream.on(\"data\", status => {\n      // login\n      if (status.loggedIn) {\n        this.isLoggedIn = status.loggedIn;\n        this.currentVerifier = status.verifier;\n      } // logout\n      else this._displayIframe();\n\n      if (this.isLoginCallback) {\n        this.isLoginCallback();\n        delete this.isLoginCallback;\n      }\n    });\n    this.provider = proxiedInpageProvider;\n    if (this.provider.shouldSendMetadata) sendSiteMetadata(this.provider._rpcEngine);\n\n    inpageProvider._initializeState();\n\n    log.debug(\"Torus - injected provider\");\n  }\n\n  _showLoginPopup(calledFromEmbed, resolve, reject) {\n    const loginHandler = data => {\n      const {\n        err,\n        selectedAddress\n      } = data;\n\n      if (err) {\n        log.error(err);\n        if (reject) reject(err);\n      } // returns an array (cause accounts expects it)\n      else if (resolve) resolve([selectedAddress]);\n\n      if (this.isIframeFullScreen) this._displayIframe();\n    };\n\n    const oauthStream = this.communicationMux.getStream(\"oauth\");\n\n    if (!this.requestedVerifier) {\n      this._displayIframe(true);\n\n      handleStream(oauthStream, \"data\", loginHandler);\n      oauthStream.write({\n        name: \"oauth_modal\",\n        data: {\n          calledFromEmbed\n        }\n      });\n    } else {\n      handleStream(oauthStream, \"data\", loginHandler);\n      const preopenInstanceId = getPreopenInstanceId();\n\n      this._handleWindow(preopenInstanceId);\n\n      oauthStream.write({\n        name: \"oauth\",\n        data: {\n          calledFromEmbed,\n          verifier: this.requestedVerifier,\n          preopenInstanceId,\n          login_hint: this.loginHint\n        }\n      });\n    }\n  }\n\n  _createPopupBlockAlert(preopenInstanceId, url) {\n    const logoUrl = this._getLogoUrl();\n\n    const torusAlert = htmlToElement('<div id=\"torusAlert\" class=\"torus-alert--v2\">' + \"<div id=\\\"torusAlert__logo\\\"><img src=\\\"\".concat(logoUrl, \"\\\" /></div>\") + \"<div>\" + \"<h1 id=\\\"torusAlert__title\\\">\".concat(this.embedTranslations.actionRequired, \"</h1>\") + \"<p id=\\\"torusAlert__desc\\\">\".concat(this.embedTranslations.pendingAction, \"</p>\") + \"</div>\" + \"</div>\");\n    const successAlert = htmlToElement(\"<div><a id=\\\"torusAlert__btn\\\">\".concat(this.embedTranslations.continue, \"</a></div>\"));\n    const btnContainer = htmlToElement('<div id=\"torusAlert__btn-container\"></div>');\n    btnContainer.appendChild(successAlert);\n    torusAlert.appendChild(btnContainer);\n\n    const bindOnLoad = () => {\n      successAlert.addEventListener(\"click\", () => {\n        this._handleWindow(preopenInstanceId, {\n          url,\n          target: \"_blank\",\n          features: FEATURES_CONFIRM_WINDOW\n        });\n\n        torusAlert.remove();\n        if (this.torusAlertContainer.children.length === 0) this.torusAlertContainer.style.display = \"none\";\n      });\n    };\n\n    this._setEmbedWhiteLabel(torusAlert);\n\n    const attachOnLoad = () => {\n      this.torusAlertContainer.style.display = \"block\";\n      this.torusAlertContainer.appendChild(torusAlert);\n    };\n\n    runOnLoad(attachOnLoad);\n    runOnLoad(bindOnLoad);\n  }\n\n}\n\nexport { BUTTON_POSITION, LOGIN_PROVIDER, PAYMENT_PROVIDER, TORUS_BUILD_ENV, TorusInpageProvider, WALLET_OPENLOGIN_VERIFIER_MAP, Torus as default };\n//# sourceMappingURL=torus.esm.js.map\n"]},"metadata":{},"sourceType":"module"}